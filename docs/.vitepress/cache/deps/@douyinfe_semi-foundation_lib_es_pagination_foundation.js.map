{
  "version": 3,
  "sources": ["../../../../node_modules/.pnpm/@douyinfe+semi-foundation@2.34.0/node_modules/@douyinfe/semi-foundation/lib/es/pagination/foundation.js"],
  "sourcesContent": ["/* eslint-disable max-len */\n\n/* eslint-disable no-param-reassign */\nimport BaseFoundation from '../base/foundation';\nimport { numbers } from './constants';\n\nclass PaginationFoundation extends BaseFoundation {\n  constructor(adapter) {\n    super(Object.assign({}, adapter));\n  }\n\n  init() {\n    const {\n      currentPage,\n      total,\n      pageSize\n    } = this.getStates(); // If pageSize is set, pageSizeOpts does not work\n\n    this._updateDisabled({\n      currentPage,\n      total,\n      pageSize\n    });\n\n    this._updatePageList({\n      currentPage,\n      total,\n      pageSize\n    });\n\n    this._registerEventHandler();\n  }\n\n  destroy() {\n    this._unregisterEventHandler();\n  }\n\n  _registerEventHandler() {\n    this._adapter.registerKeyDownHandler(this.handleKeyDown);\n  }\n\n  _unregisterEventHandler() {\n    this._adapter.unregisterKeyDownHandler(this.handleKeyDown);\n  }\n\n  _updateDisabled(pageInfo) {\n    const {\n      currentPage,\n      total,\n      pageSize\n    } = pageInfo;\n\n    const totalPageNum = this._getTotalPageNumber(total, pageSize);\n\n    let prevIsDisabled = false;\n    let nextIsDisabled = false;\n\n    if (currentPage === 1) {\n      prevIsDisabled = true;\n      nextIsDisabled = totalPageNum < 2;\n    } else if (currentPage === totalPageNum) {\n      prevIsDisabled = false;\n      nextIsDisabled = true;\n    }\n\n    this._adapter.setDisabled(prevIsDisabled, nextIsDisabled);\n  }\n\n  goPage(targetPageIndex) {\n    if (targetPageIndex === '...') {\n      return;\n    }\n\n    const {\n      pageSize,\n      currentPage\n    } = this.getStates();\n\n    const isControlComponent = this._isInProps('currentPage');\n\n    if (targetPageIndex === currentPage) {\n      return;\n    }\n\n    if (!isControlComponent) {\n      this.updatePage(targetPageIndex);\n\n      this._adapter.notifyPageChange(targetPageIndex);\n\n      this._adapter.notifyChange(targetPageIndex, pageSize);\n    } else {\n      this._adapter.notifyPageChange(targetPageIndex);\n\n      this._adapter.notifyChange(targetPageIndex, pageSize);\n    }\n  }\n\n  updatePage() {\n    let targetPageIndex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    let total = arguments.length > 1 ? arguments[1] : undefined;\n    let pageSize = arguments.length > 2 ? arguments[2] : undefined;\n\n    // maybe undefined or null\n    if (total === null || typeof total === 'undefined') {\n      total = this.getState('total');\n    }\n\n    if (pageSize === null || typeof pageSize === 'undefined') {\n      pageSize = this.getState('pageSize');\n    }\n\n    this._updateDisabled({\n      currentPage: targetPageIndex,\n      total,\n      pageSize\n    });\n\n    this._updatePageList({\n      currentPage: targetPageIndex,\n      total,\n      pageSize\n    });\n\n    this._adapter.updateTotal(total);\n\n    this._adapter.setCurrentPage(targetPageIndex);\n\n    this._adapter.updatePageSize(pageSize);\n  }\n\n  goPrev() {\n    const {\n      currentPage\n    } = this.getStates();\n\n    if (currentPage > 1) {\n      this.goPage(currentPage - 1);\n    }\n  }\n\n  goNext() {\n    const {\n      currentPage,\n      total,\n      pageSize\n    } = this.getStates();\n\n    const totalPageNum = this._getTotalPageNumber(total, pageSize);\n\n    if (currentPage <= totalPageNum - 1) {\n      this.goPage(currentPage + 1);\n    }\n  }\n\n  _updatePageList(pageListInfo) {\n    const {\n      currentPage,\n      total,\n      pageSize\n    } = pageListInfo;\n    let pageList = [];\n    let restLeftPageList = []; // pages before ...\n\n    let restRightPageList = []; // pages after ...\n\n    /** Pager truncation logic (t is the total number of pages, c is the current page):\n         - No need to truncate when t<=7 pages\n         - When t>7\n             - When c<4, the fourth is a truncation symbol (...)\n             - When c=4, the sixth is the truncation symbol (...)\n             - When 4<c<t-3, the second and sixth are truncation symbols (...)\n             - When t-3<=c<=t, the second is the truncation symbol (...), followed by the 5th from the bottom-the 1st from the bottom\n         Truncation character + number, the total number is 7\n         分页器截断逻辑（t为总页数，c为当前页）：\n        - t<=7 页的时候不需要截断\n        - 当 t>7 时\n            - 当 c<4 时，第4个为截断符号（...）\n            - 当 c=4 时，第6个为截断符号（...）\n            - 当 4<c<t-3 时，第2个与第6个为截断符号（...）\n            - 当 t-3<=c<=t 时，第 2 个为截断符号（...），后面为倒数第5个-倒数第1个\n        截断符+数字 总共个数为7个\n    */\n\n    const totalPageNum = this._getTotalPageNumber(total, pageSize);\n\n    const {\n      PAGE_SHOW_MAX,\n      REST_PAGE_MAX_SIZE\n    } = numbers;\n\n    if (totalPageNum <= PAGE_SHOW_MAX) {\n      pageList = Array.from({\n        length: totalPageNum\n      }, (v, i) => i + 1);\n      restLeftPageList = [];\n      restRightPageList = [];\n    } else {\n      switch (true) {\n        case currentPage < 4:\n          pageList = [1, 2, 3, 4, '...', totalPageNum - 1, totalPageNum]; // length: (totalPageNum - 1) - 4\n\n          restRightPageList = Array.from({\n            length: Math.min(totalPageNum - 6, REST_PAGE_MAX_SIZE)\n          }, (v, i) => i + 5);\n          restLeftPageList = [];\n          break;\n\n        case currentPage === 4:\n          pageList = [1, 2, 3, 4, 5, '...', totalPageNum];\n          restRightPageList = Array.from({\n            length: Math.min(totalPageNum - 6, REST_PAGE_MAX_SIZE)\n          }, (v, i) => i + 6);\n          restLeftPageList = [];\n          break;\n\n        case 4 < currentPage && currentPage < totalPageNum - 3:\n          const middle = Array.from({\n            length: 3\n          }, (v, i) => currentPage + (i - 1));\n          pageList = [1].concat('...', middle, '...', totalPageNum); // length: total-(currentPage+1)-1\n\n          restRightPageList = Array.from({\n            length: Math.min(totalPageNum - currentPage - 2, REST_PAGE_MAX_SIZE)\n          }, (v, i) => currentPage + i + 2);\n          restLeftPageList = Array.from({\n            length: Math.min(currentPage - 3, REST_PAGE_MAX_SIZE)\n          }, (v, i) => i + 2);\n          break;\n\n        case currentPage - 3 <= currentPage && currentPage <= totalPageNum:\n          const right = Array.from({\n            length: 5\n          }, (v, i) => totalPageNum - (4 - i));\n          pageList = [1, '...'].concat(right);\n          restRightPageList = [];\n          restLeftPageList = Array.from({\n            length: Math.min(right[0] - 2, REST_PAGE_MAX_SIZE)\n          }, (v, i) => i + 2);\n          break;\n\n        default:\n          break;\n      }\n    }\n\n    this._adapter.setPageList({\n      pageList,\n      restLeftPageList,\n      restRightPageList\n    }); // this._adapter.setRestLeftPageList(restLeftPageList);\n    // this._adapter.setRestRightPageList(restRightPageList);\n\n  }\n\n  changePageSize(newPageSize) {\n    const {\n      pageSize\n    } = this.getStates();\n\n    this._adapter.updatePageSize(newPageSize);\n\n    this._adapter.notifyPageSizeChange(newPageSize);\n\n    const {\n      total,\n      currentPage\n    } = this.getStates(); // After converting the switching page capacity, which page is the current page\n\n    const currentPageFirstItemIndex = (currentPage - 1) * pageSize + 1;\n    const newCurrentPage = Math.ceil(currentPageFirstItemIndex / newPageSize);\n    this.updatePage(newCurrentPage, total, newPageSize);\n\n    if (currentPage !== newCurrentPage) {\n      this._adapter.notifyPageChange(newCurrentPage);\n    }\n\n    this._adapter.notifyChange(newCurrentPage, newPageSize);\n  } // TODO handle tab/enter events\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n\n\n  handleKeyDown() {} // If pageSize is not in the Opts array, insert it\n\n\n  pageSizeInOpts() {\n    const {\n      pageSizeOpts\n    } = this.getProps();\n    const {\n      pageSize\n    } = this.getStates();\n    const newPageSizeOpts = [...pageSizeOpts];\n\n    if (newPageSizeOpts.indexOf(pageSize) === -1) {\n      const firstLargerIndex = newPageSizeOpts.findIndex(el => el > pageSize);\n      newPageSizeOpts.splice(firstLargerIndex, 0, pageSize);\n    }\n\n    return newPageSizeOpts;\n  }\n\n  handleQuickJumpNumberChange(targetPage) {\n    this._adapter.updateQuickJumpPage(targetPage);\n  }\n\n  _handleQuickJump(quickJumpPage) {\n    let page = Number(quickJumpPage);\n    const {\n      pageSize,\n      total\n    } = this.getStates();\n\n    const totalPageNum = this._getTotalPageNumber(total, pageSize);\n\n    if (Number.isNaN(page)) {\n      return;\n    } // If the user input is greater than totalPage\n\n\n    if (page > totalPageNum) {\n      page = totalPageNum;\n    }\n\n    if (page <= 0) {\n      page = 1;\n    } // clear inputnumber\n\n\n    this._adapter.updateQuickJumpPage('');\n\n    this.goPage(page);\n  }\n\n  handleQuickJumpBlur() {\n    const {\n      quickJumpPage\n    } = this.getStates(); // no need to operate when inputnumber blur & quickJumpPage is empty\n\n    if (typeof quickJumpPage === 'string' && quickJumpPage || typeof quickJumpPage === 'number') {\n      this._handleQuickJump(quickJumpPage);\n    }\n  }\n\n  handleQuickJumpEnterPress(targetPage) {\n    this._handleQuickJump(targetPage);\n  }\n\n  _getTotalPageNumber(total, pageSize) {\n    const totalPageNum = Math.ceil(total / pageSize);\n    return totalPageNum;\n  }\n\n}\n\nexport default PaginationFoundation;"],
  "mappings": "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",
  "names": ["foundation_default"]
}
