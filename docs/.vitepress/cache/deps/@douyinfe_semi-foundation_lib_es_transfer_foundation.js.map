{
  "version": 3,
  "sources": ["../../../../node_modules/.pnpm/@douyinfe+semi-foundation@2.34.0/node_modules/@douyinfe/semi-foundation/lib/es/transfer/foundation.js"],
  "sourcesContent": ["import _omit from \"lodash/omit\";\nimport BaseFoundation from '../base/foundation';\nimport { strings } from './constants';\nimport { _generateGroupedData, _generateTreeData } from './transferUtils';\nimport arrayMove from '../utils/arrayMove'; // eslint-disable-next-line max-len\n\nexport default class TransferFoundation extends BaseFoundation {\n  constructor(adapter) {\n    super(Object.assign({}, adapter));\n  }\n\n  _generateGroupedData(dataSource) {\n    return _generateGroupedData(dataSource);\n  }\n\n  _generateTreeData(dataSource) {\n    return _generateTreeData(dataSource);\n  }\n\n  _generatePath(item) {\n    const {\n      path = []\n    } = item;\n    return path.map(p => p.label).join(' > ');\n  }\n\n  handleInputChange(inputVal, notify) {\n    const {\n      data\n    } = this.getStates();\n    const {\n      filter,\n      type\n    } = this.getProps();\n\n    if (type === strings.TYPE_TREE_TO_LIST) {\n      const searchResult = new Set(data.map(item => item.key));\n\n      this._adapter.searchTree(inputVal);\n\n      notify && this._adapter.notifySearch(inputVal);\n\n      this._adapter.updateInput(inputVal);\n\n      this._adapter.updateSearchResult(searchResult);\n\n      return;\n    }\n\n    const filterFunc = typeof filter === 'function' ? item => filter(inputVal, item) : item => typeof item.label === 'string' && item.label.includes(inputVal);\n    const searchData = data.filter(filterFunc);\n    const searchResult = new Set(searchData.map(item => item.key));\n    notify && this._adapter.notifySearch(inputVal);\n\n    this._adapter.updateInput(inputVal);\n\n    this._adapter.updateSearchResult(searchResult);\n  } // Select or cancel all unhidden items\n\n\n  handleAll(wantAllChecked) {\n    const {\n      disabled,\n      type\n    } = this.getProps();\n    const {\n      selectedItems,\n      data,\n      searchResult,\n      inputValue\n    } = this.getStates();\n\n    if (disabled) {\n      return;\n    }\n\n    const inSearchMode = inputValue !== '';\n    let operateData = [];\n    operateData = inSearchMode ? data.filter(item => searchResult.has(item.key)) : data;\n    operateData = type === strings.TYPE_TREE_TO_LIST ? data : operateData;\n    let newSelectedItems = new Map();\n\n    switch (true) {\n      case !wantAllChecked:\n        newSelectedItems = new Map(selectedItems);\n        operateData.forEach(item => {\n          // If the item is disabled, keep it\n          if (!item.disabled) {\n            newSelectedItems.delete(item.key);\n          }\n        });\n        break;\n\n      case wantAllChecked:\n        newSelectedItems = new Map(selectedItems);\n        operateData.forEach(item => {\n          if (item.disabled) {\n            // The disabled item, judge whether it is selected, if it is selected, still need to add the selection\n            if (selectedItems.has(item.key)) {\n              newSelectedItems.set(item.key, item);\n            }\n\n            return;\n          }\n\n          newSelectedItems.set(item.key, item);\n        });\n        break;\n\n      default:\n        break;\n    }\n\n    if (!this._isControlledComponent()) {\n      this._adapter.updateSelected(newSelectedItems);\n    }\n\n    this._notifyChange(newSelectedItems);\n  }\n\n  handleClear() {\n    const {\n      disabled\n    } = this.getProps();\n    const {\n      selectedItems,\n      data\n    } = this.getStates();\n\n    if (disabled) {\n      return;\n    }\n\n    const newSelectedItems = new Map(selectedItems);\n    data.forEach(item => {\n      // If the item is disabled, keep it\n      if (!item.disabled) {\n        newSelectedItems.delete(item.key);\n      }\n    });\n\n    if (!this._isControlledComponent()) {\n      this._adapter.updateSelected(newSelectedItems);\n    }\n\n    this._notifyChange(newSelectedItems);\n  }\n\n  handleSelectOrRemove(item) {\n    const {\n      disabled\n    } = this.getProps();\n\n    const selectedItems = this._adapter.getSelected();\n\n    if (disabled || item.disabled) {\n      return;\n    }\n\n    if (selectedItems.has(item.key)) {\n      selectedItems.delete(item.key);\n\n      this._adapter.notifyDeselect(item);\n    } else {\n      selectedItems.set(item.key, item);\n\n      this._adapter.notifySelect(item);\n    }\n\n    if (!this._isControlledComponent()) {\n      this._adapter.updateSelected(selectedItems);\n    }\n\n    this._notifyChange(selectedItems);\n  }\n\n  handleSelect(values) {\n    const {\n      disabled\n    } = this.getProps();\n\n    const selectedItems = this._adapter.getSelected();\n\n    const {\n      data\n    } = this.getStates();\n    const dataItems = data.map(d => [d.value, d]);\n    const allItemsMap = new Map(dataItems);\n    const nextSelectedItemsMap = new Map();\n\n    if (disabled) {\n      return;\n    }\n\n    values.forEach(value => {\n      const node = allItemsMap.get(value); // The value passed in is an array of the value used, but the internal selectedItems stores a map of keys\n\n      if (selectedItems.has(node.key)) {\n        nextSelectedItemsMap.set(node.key, node);\n        return;\n      }\n\n      if (node.disabled) {\n        return;\n      }\n\n      nextSelectedItemsMap.set(node.key, node);\n      return;\n    });\n\n    if (!this._isControlledComponent()) {\n      this._adapter.updateSelected(nextSelectedItemsMap);\n    }\n\n    this._notifyChange(nextSelectedItemsMap);\n  }\n\n  getValuesAndItemsFromMap(selectedItems) {\n    const {\n      type\n    } = this.getProps();\n    const items = [];\n    const values = [];\n\n    for (const item of selectedItems) {\n      const obj = type === strings.TYPE_GROUP_LIST ? _omit(item[1], '_parent') : item[1];\n      items.push(obj);\n      values.push(obj.value);\n    }\n\n    return {\n      items,\n      values\n    };\n  }\n\n  _notifyChange(selectedItems) {\n    const {\n      items,\n      values\n    } = this.getValuesAndItemsFromMap(selectedItems);\n\n    this._adapter.notifyChange(values, items);\n  }\n\n  handleSortEnd(callbackProps) {\n    const {\n      oldIndex,\n      newIndex\n    } = callbackProps;\n\n    const selectedItems = this._adapter.getSelected();\n\n    let selectedArr = [...selectedItems.values()];\n    selectedArr = arrayMove(selectedArr, oldIndex, newIndex);\n    let newSelectedItems = new Map();\n    selectedArr.forEach(option => {\n      newSelectedItems = newSelectedItems.set(option.key, option);\n    });\n\n    this._adapter.updateSelected(newSelectedItems);\n\n    this._notifyChange(newSelectedItems);\n  }\n\n}"],
  "mappings": "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",
  "names": ["searchResult", "_omit"]
}
