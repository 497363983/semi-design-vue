{
  "version": 3,
  "sources": ["../../../../node_modules/.pnpm/@douyinfe+semi-foundation@2.34.0/node_modules/@douyinfe/semi-foundation/lib/es/autoComplete/foundation.js"],
  "sourcesContent": ["import _isObject from \"lodash/isObject\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport _isNumber from \"lodash/isNumber\";\nimport _isString from \"lodash/isString\";\n\n/* eslint-disable prefer-const, max-len */\nimport BaseFoundation from '../base/foundation';\nimport warning from '../utils/warning';\nimport KeyCode from '../utils/keyCode';\n\nclass AutoCompleteFoundation extends BaseFoundation {\n  constructor(adapter) {\n    super(Object.assign({}, adapter));\n    this.isPanelOpen = false;\n  }\n\n  init() {\n    this._setDropdownWidth();\n\n    const {\n      defaultOpen,\n      data,\n      defaultValue,\n      value\n    } = this.getProps();\n\n    if (data && data.length) {\n      const initOptions = this._generateList(data);\n\n      this._adapter.updateOptionList(initOptions);\n    }\n\n    if (defaultOpen) {\n      this.openDropdown();\n    } // When both defaultValue and value exist, finally the value of value will be taken as initValue\n\n\n    let initValue;\n\n    if (typeof defaultValue !== 'undefined') {\n      initValue = defaultValue;\n    }\n\n    if (typeof value !== 'undefined') {\n      initValue = value;\n    }\n\n    if (typeof initValue !== 'undefined') {\n      this.handleValueChange(initValue);\n    }\n  }\n\n  destroy() {// this._adapter.unregisterClickOutsideHandler();\n    // this.unBindKeyBoardEvent();\n  }\n\n  _setDropdownWidth() {\n    const {\n      style,\n      dropdownMatchSelectWidth\n    } = this.getProps();\n    let width;\n\n    if (dropdownMatchSelectWidth) {\n      if (style && _isNumber(style.width)) {\n        width = style.width;\n      } else if (style && _isString(style.width) && !style.width.includes('%')) {\n        width = style.width;\n      } else {\n        width = this._adapter.getTriggerWidth();\n      }\n\n      this._adapter.setOptionWrapperWidth(width);\n    }\n  }\n\n  handleInputClick(e) {\n    const {\n      options\n    } = this.getStates();\n    const {\n      disabled\n    } = this.getProps();\n\n    if (!disabled) {\n      if (this.isPanelOpen) {\n        this.closeDropdown();\n      } else {\n        this.openDropdown();\n      }\n    }\n  }\n\n  openDropdown() {\n    this.isPanelOpen = true;\n\n    this._adapter.toggleListVisible(true);\n\n    this._setDropdownWidth(); // this._adapter.registerClickOutsideHandler(e => this.closeDropdown(e));\n\n\n    this._adapter.notifyDropdownVisibleChange(true);\n\n    this._modifyFocusIndexOnPanelOpen();\n  }\n\n  closeDropdown(e) {\n    this.isPanelOpen = false;\n\n    this._adapter.toggleListVisible(false); // this._adapter.unregisterClickOutsideHandler();\n\n\n    this._adapter.notifyDropdownVisibleChange(false); // After closing the panel, you can still open the panel by pressing the enter key\n    // this.unBindKeyBoardEvent();\n\n  } // props.data => optionList\n\n\n  _generateList(data) {\n    const {\n      renderItem\n    } = this.getProps();\n    const options = [];\n\n    if (data && data.length) {\n      data.forEach((item, i) => {\n        const key = String(new Date().getTime()) + i;\n        let option = {};\n\n        if (_isString(item) || _isNumber(item)) {\n          option = {\n            value: item,\n            key,\n            label: item,\n            show: true\n          };\n        } else if (_isObject(item) && !_isUndefined(item.value)) {\n          option = Object.assign({\n            show: true\n          }, item);\n        }\n\n        if (renderItem && typeof renderItem === 'function') {\n          option.label = renderItem(item);\n        }\n\n        options.push(option);\n      });\n    }\n\n    return options;\n  }\n\n  handleSearch(inputValue) {\n    this._adapter.updateInputValue(inputValue);\n\n    this._adapter.notifySearch(inputValue);\n\n    this._adapter.notifyChange(inputValue);\n\n    this._modifyFocusIndex(inputValue);\n\n    if (!this.isPanelOpen) {\n      this.openDropdown();\n    }\n  }\n\n  handleSelect(option, optionIndex) {\n    const {\n      renderSelectedItem\n    } = this.getProps();\n    let newInputValue = '';\n\n    if (renderSelectedItem && typeof renderSelectedItem === 'function') {\n      newInputValue = renderSelectedItem(option);\n      warning(typeof newInputValue !== 'string', 'Warning: [Semi AutoComplete] renderSelectedItem must return string, please check your function return');\n    } else {\n      newInputValue = option.value;\n    } // 1. trigger onSelect\n    // 2. close Dropdown\n\n\n    if (this._isControlledComponent()) {\n      this.closeDropdown();\n      this.notifySelect(option);\n    } else {\n      // 1. update Input\n      // 2. update Selection\n      // 3. trigger onSelect\n      // 4. close Dropdown\n      this._adapter.updateInputValue(newInputValue);\n\n      this.updateSelection(option);\n      this.notifySelect(option);\n      this.closeDropdown();\n    }\n\n    this._adapter.notifyChange(newInputValue);\n\n    this._adapter.updateFocusIndex(optionIndex);\n  }\n\n  updateSelection(option) {\n    const selection = new Map();\n\n    if (option) {\n      selection.set(option.label, option);\n    }\n\n    this._adapter.updateSelection(selection);\n  }\n\n  notifySelect(option) {\n    if (this._backwardLabelInValue()) {\n      this._adapter.notifySelect(option);\n    } else {\n      this._adapter.notifySelect(option.value);\n    }\n  }\n\n  _backwardLabelInValue() {\n    const props = this.getProps();\n    let {\n      onSelectWithObject\n    } = props;\n    return onSelectWithObject;\n  }\n\n  handleDataChange(newData) {\n    const options = this._generateList(newData);\n\n    this._adapter.updateOptionList(options);\n\n    this._adapter.rePositionDropdown();\n  }\n\n  handleValueChange(propValue) {\n    let {\n      data,\n      defaultActiveFirstOption\n    } = this.getProps();\n    let selectedValue = '';\n\n    if (this._backwardLabelInValue() && Object.prototype.toString.call(propValue) === '[object Object]') {\n      selectedValue = propValue.value;\n    } else {\n      selectedValue = propValue;\n    }\n\n    let renderSelectedItem = this._getRenderSelectedItem();\n\n    const options = this._generateList(data); // Get the option whose value match from options\n\n\n    let selectedOption = options.filter(option => renderSelectedItem(option) === selectedValue);\n    const canMatchInData = selectedOption.length;\n    const selectedOptionIndex = options.findIndex(option => renderSelectedItem(option) === selectedValue);\n    let inputValue = '';\n\n    if (canMatchInData) {\n      selectedOption = selectedOption[0];\n      inputValue = renderSelectedItem(selectedOption);\n    } else {\n      const cbItem = this._backwardLabelInValue() ? propValue : {\n        label: selectedValue,\n        value: selectedValue\n      };\n      inputValue = renderSelectedItem(cbItem);\n    }\n\n    this._adapter.updateInputValue(inputValue);\n\n    this.updateSelection(canMatchInData ? selectedOption : null);\n\n    if (selectedOptionIndex === -1 && defaultActiveFirstOption) {\n      this._adapter.updateFocusIndex(0);\n    } else {\n      this._adapter.updateFocusIndex(selectedOptionIndex);\n    }\n  }\n\n  _modifyFocusIndex(searchValue) {\n    let {\n      focusIndex\n    } = this.getStates();\n    let {\n      data,\n      defaultActiveFirstOption\n    } = this.getProps();\n\n    let renderSelectedItem = this._getRenderSelectedItem();\n\n    const options = this._generateList(data);\n\n    const selectedOptionIndex = options.findIndex(option => renderSelectedItem(option) === searchValue);\n\n    if (selectedOptionIndex === -1 && defaultActiveFirstOption) {\n      if (focusIndex !== 0) {\n        this._adapter.updateFocusIndex(0);\n      }\n    } else {\n      if (selectedOptionIndex !== focusIndex) {\n        this._adapter.updateFocusIndex(selectedOptionIndex);\n      }\n    }\n  }\n\n  _modifyFocusIndexOnPanelOpen() {\n    let {\n      inputValue\n    } = this.getStates();\n\n    this._modifyFocusIndex(inputValue);\n  }\n\n  _getRenderSelectedItem() {\n    let {\n      renderSelectedItem\n    } = this.getProps();\n\n    if (typeof renderSelectedItem === 'undefined') {\n      renderSelectedItem = option => option.value;\n    } else if (renderSelectedItem && typeof renderSelectedItem === 'function') {// do nothing\n    }\n\n    return renderSelectedItem;\n  }\n\n  handleClear() {\n    this._adapter.notifyClear();\n  }\n\n  bindKeyBoardEvent() {\n    this._keydownHandler = event => {\n      this._handleKeyDown(event);\n    };\n\n    this._adapter.registerKeyDown(this._keydownHandler);\n  } // unBindKeyBoardEvent() {\n  //     if (this._keydownHandler) {\n  //         this._adapter.unregisterKeyDown(this._keydownHandler);\n  //     }\n  // }\n\n\n  _handleKeyDown(event) {\n    const key = event.keyCode;\n    const {\n      visible\n    } = this.getStates();\n\n    switch (key) {\n      case KeyCode.UP:\n        // Prevent Input's cursor from following the movement\n        event.preventDefault();\n\n        this._handleArrowKeyDown(-1);\n\n        break;\n\n      case KeyCode.DOWN:\n        // Prevent Input's cursor from following the movement\n        event.preventDefault();\n\n        this._handleArrowKeyDown(1);\n\n        break;\n\n      case KeyCode.ENTER:\n        // when custom trigger, prevent outer open panel again\n        event.preventDefault();\n\n        this._handleEnterKeyDown();\n\n        break;\n\n      case KeyCode.ESC:\n        this.closeDropdown();\n        break;\n\n      default:\n        break;\n    }\n\n    this._adapter.notifyKeyDown(event);\n  }\n\n  _getEnableFocusIndex(offset) {\n    const {\n      focusIndex,\n      options\n    } = this.getStates();\n    const visibleOptions = options.filter(item => item.show);\n    const optionsLength = visibleOptions.length;\n    let index = focusIndex + offset;\n\n    if (index < 0) {\n      index = optionsLength - 1;\n    }\n\n    if (index >= optionsLength) {\n      index = 0;\n    } // avoid newIndex option is disabled\n\n\n    if (offset > 0) {\n      let nearestActiveOption = -1;\n\n      for (let i = 0; i < visibleOptions.length; i++) {\n        const optionIsActive = !visibleOptions[i].disabled;\n\n        if (optionIsActive) {\n          nearestActiveOption = i;\n        }\n\n        if (nearestActiveOption >= index) {\n          break;\n        }\n      }\n\n      index = nearestActiveOption;\n    } else {\n      let nearestActiveOption = visibleOptions.length;\n\n      for (let i = optionsLength - 1; i >= 0; i--) {\n        const optionIsActive = !visibleOptions[i].disabled;\n\n        if (optionIsActive) {\n          nearestActiveOption = i;\n        }\n\n        if (nearestActiveOption <= index) {\n          break;\n        }\n      }\n\n      index = nearestActiveOption;\n    }\n\n    this._adapter.updateFocusIndex(index);\n  }\n\n  _handleArrowKeyDown(offset) {\n    const {\n      visible\n    } = this.getStates();\n\n    if (!visible) {\n      this.openDropdown();\n    } else {\n      this._getEnableFocusIndex(offset);\n    }\n  }\n\n  _handleEnterKeyDown() {\n    const {\n      visible,\n      options,\n      focusIndex\n    } = this.getStates();\n\n    if (!visible) {\n      this.openDropdown();\n    } else {\n      if (focusIndex !== undefined && focusIndex !== -1 && options.length !== 0) {\n        const visibleOptions = options.filter(item => item.show);\n        const selectedOption = visibleOptions[focusIndex];\n        this.handleSelect(selectedOption, focusIndex);\n      } else {\n        this.closeDropdown();\n      }\n    }\n  }\n\n  handleOptionMouseEnter(optionIndex) {\n    this._adapter.updateFocusIndex(optionIndex);\n  }\n\n  handleFocus(e) {\n    // If you get the focus through the tab key, you need to manually bind keyboard events\n    // Then you can open the panel by pressing the enter key\n    this.bindKeyBoardEvent();\n\n    this._adapter.notifyFocus(e);\n  }\n\n  handleBlur(e) {\n    // only need persist on react adapter\n    // https://reactjs.org/docs/legacy-event-pooling.html\n    this._persistEvent(e); // In order to handle the problem of losing onClick binding when clicking on the padding area, the onBlur event is triggered first to cause the react view to be updated\n    // internal-issues:1231\n\n\n    setTimeout(() => {\n      this._adapter.notifyBlur(e);\n\n      this.closeDropdown();\n    }, 100);\n  }\n\n}\n\nexport default AutoCompleteFoundation;"],
  "mappings": "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",
  "names": ["_isNumber", "_isString", "_isObject", "_isUndefined", "foundation_default"]
}
