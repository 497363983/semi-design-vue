{
  "version": 3,
  "sources": ["../../../../node_modules/.pnpm/@douyinfe+semi-foundation@2.34.0/node_modules/@douyinfe/semi-foundation/lib/es/tooltip/foundation.js"],
  "sourcesContent": ["import _isEmpty from \"lodash/isEmpty\";\nimport _get from \"lodash/get\";\nimport BaseFoundation from '../base/foundation';\nimport { handlePrevent } from '../utils/a11y';\nconst REGS = {\n  TOP: /top/i,\n  RIGHT: /right/i,\n  BOTTOM: /bottom/i,\n  LEFT: /left/i\n};\nconst defaultRect = {\n  left: 0,\n  top: 0,\n  height: 0,\n  width: 0,\n  scrollLeft: 0,\n  scrollTop: 0\n};\nexport default class Tooltip extends BaseFoundation {\n  constructor(adapter) {\n    var _this;\n\n    super(Object.assign({}, adapter));\n    _this = this;\n\n    this.removePortal = () => {\n      this._adapter.removePortal();\n    };\n\n    this.setDisplayNone = (displayNone, cb) => {\n      this._adapter.setDisplayNone(displayNone, cb);\n    };\n\n    this.onResize = () => {\n      // this.log('resize');\n      // rePosition when window resize\n      this.calcPosition();\n    };\n\n    this.delayShow = () => {\n      const mouseEnterDelay = this.getProp('mouseEnterDelay');\n      this.clearDelayTimer();\n\n      if (mouseEnterDelay > 0) {\n        this._timer = setTimeout(() => {\n          this.show();\n          this.clearDelayTimer();\n        }, mouseEnterDelay);\n      } else {\n        this.show();\n      }\n    };\n\n    this.show = () => {\n      const content = this.getProp('content');\n      const trigger = this.getProp('trigger');\n      const clickTriggerToHide = this.getProp('clickTriggerToHide');\n      const {\n        visible,\n        displayNone\n      } = this.getStates();\n\n      if (displayNone) {\n        this.setDisplayNone(false);\n      }\n\n      if (visible) {\n        return;\n      }\n\n      this.clearDelayTimer();\n      /**\n       * If you emit an event in setState callback, you need to place the event listener function before setState to execute.\n       * This is to avoid event registration being executed later than setState callback when setState is executed in setTimeout.\n       * internal-issues:1402#note_38969412\n       */\n\n      this._adapter.on('portalInserted', () => {\n        this.calcPosition();\n      });\n\n      this._adapter.on('positionUpdated', () => {\n        this._togglePortalVisible(true);\n      });\n\n      this._adapter.insertPortal(content, {\n        left: -9999,\n        top: -9999\n      }); // offscreen rendering\n\n\n      if (trigger === 'custom') {\n        // eslint-disable-next-line\n        this._adapter.registerClickOutsideHandler(() => {});\n      }\n      /**\n       * trigger类型是click时，仅当portal被插入显示后，才绑定clickOutsideHandler\n       * 因为handler需要绑定在document上。如果在constructor阶段绑定\n       * 当一个页面中有多个容器实例时，一次click会触发多个容器的handler\n       *\n       * When the trigger type is click, clickOutsideHandler is bound only after the portal is inserted and displayed\n       * Because the handler needs to be bound to the document. If you bind during the constructor phase\n       * When there are multiple container instances in a page, one click triggers the handler of multiple containers\n       */\n\n\n      if (trigger === 'click' || clickTriggerToHide) {\n        this._adapter.registerClickOutsideHandler(this.hide);\n      }\n\n      this._bindScrollEvent();\n\n      this._bindResizeEvent();\n    };\n    /**\n     * 耦合的东西比较多，稍微罗列一下：\n     *\n     * - 根据 trigger 和 wrapper 的 boundingClient 计算当前的 left、top、transform-origin\n     * - 根据当前的 position 和 wrapper 的 boundingClient 决定是否需要自动调整位置\n     * - 根据当前的 position、trigger 的 boundingClient 以及 motion.handleStyle 调整当前的 style\n     *\n     * There are many coupling things, a little list:\n     *\n     * - calculate the current left, top, and transfer-origin according to the boundingClient of trigger and wrapper\n     * - decide whether to automatically adjust the position according to the current position and the boundingClient of wrapper\n     * - adjust the current style according to the current position, the boundingClient of trigger and motion.handle Style\n     */\n\n\n    this.calcPosition = function (triggerRect, wrapperRect, containerRect) {\n      let shouldUpdatePos = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n      triggerRect = (_isEmpty(triggerRect) ? _this._adapter.getTriggerBounding() : triggerRect) || Object.assign({}, defaultRect);\n      containerRect = (_isEmpty(containerRect) ? _this._adapter.getPopupContainerRect() : containerRect) || Object.assign({}, defaultRect);\n      wrapperRect = (_isEmpty(wrapperRect) ? _this._adapter.getWrapperBounding() : wrapperRect) || Object.assign({}, defaultRect); // console.log('containerRect: ', containerRect, 'triggerRect: ', triggerRect, 'wrapperRect: ', wrapperRect);\n\n      let style = _this.calcPosStyle({\n        triggerRect,\n        wrapperRect,\n        containerRect\n      });\n\n      let position = _this.getProp('position');\n\n      if (_this.getProp('autoAdjustOverflow')) {\n        // console.log('style: ', style, '\\ntriggerRect: ', triggerRect, '\\nwrapperRect: ', wrapperRect);\n        const {\n          position: adjustedPos,\n          isHeightOverFlow,\n          isWidthOverFlow\n        } = _this.adjustPosIfNeed(position, style, triggerRect, wrapperRect, containerRect);\n\n        if (position !== adjustedPos || isHeightOverFlow || isWidthOverFlow) {\n          position = adjustedPos;\n          style = _this.calcPosStyle({\n            triggerRect,\n            wrapperRect,\n            containerRect,\n            position,\n            spacing: null,\n            isOverFlow: [isHeightOverFlow, isWidthOverFlow]\n          });\n        }\n      }\n\n      if (shouldUpdatePos && _this._mounted) {\n        // this._adapter.updatePlacementAttr(style.position);\n        _this._adapter.setPosition(Object.assign(Object.assign({}, style), {\n          position\n        }));\n      }\n\n      return style;\n    };\n\n    this.delayHide = () => {\n      const mouseLeaveDelay = this.getProp('mouseLeaveDelay');\n      this.clearDelayTimer();\n\n      if (mouseLeaveDelay > 0) {\n        this._timer = setTimeout(() => {\n          // console.log('delayHide for ', mouseLeaveDelay, ' ms, ', ...args);\n          this.hide();\n          this.clearDelayTimer();\n        }, mouseLeaveDelay);\n      } else {\n        this.hide();\n      }\n    };\n\n    this.hide = () => {\n      this.clearDelayTimer();\n\n      this._togglePortalVisible(false);\n\n      this._adapter.off('portalInserted');\n\n      this._adapter.off('positionUpdated');\n    };\n\n    this.handleContainerKeydown = event => {\n      const {\n        guardFocus,\n        closeOnEsc\n      } = this.getProps();\n\n      switch (event && event.key) {\n        case \"Escape\":\n          closeOnEsc && this._handleEscKeyDown(event);\n          break;\n\n        case \"Tab\":\n          if (guardFocus) {\n            const container = this._adapter.getContainer();\n\n            const focusableElements = this._adapter.getFocusableElements(container);\n\n            const focusableNum = focusableElements.length;\n\n            if (focusableNum) {\n              // Shift + Tab will move focus backward\n              if (event.shiftKey) {\n                this._handleContainerShiftTabKeyDown(focusableElements, event);\n              } else {\n                this._handleContainerTabKeyDown(focusableElements, event);\n              }\n            }\n          }\n\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this._timer = null;\n  }\n\n  init() {\n    const {\n      wrapperId\n    } = this.getProps();\n    this._mounted = true;\n\n    this._bindEvent();\n\n    this._shouldShow();\n\n    this._initContainerPosition();\n\n    if (!wrapperId) {\n      this._adapter.setId();\n    }\n  }\n\n  destroy() {\n    this._mounted = false;\n    this.unBindEvent();\n  }\n\n  _bindEvent() {\n    const trigger = this.getProp('trigger'); // get trigger type\n\n    const {\n      triggerEventSet,\n      portalEventSet\n    } = this._generateEvent(trigger);\n\n    this._bindTriggerEvent(triggerEventSet);\n\n    this._bindPortalEvent(portalEventSet);\n\n    this._bindResizeEvent();\n  }\n\n  unBindEvent() {\n    this._adapter.unregisterClickOutsideHandler();\n\n    this.unBindResizeEvent();\n    this.unBindScrollEvent();\n  }\n\n  _bindTriggerEvent(triggerEventSet) {\n    this._adapter.registerTriggerEvent(triggerEventSet);\n  }\n\n  _bindPortalEvent(portalEventSet) {\n    this._adapter.registerPortalEvent(portalEventSet);\n  }\n\n  _bindResizeEvent() {\n    this._adapter.registerResizeHandler(this.onResize);\n  }\n\n  unBindResizeEvent() {\n    this._adapter.unregisterResizeHandler(this.onResize);\n  }\n\n  _adjustPos() {\n    let position = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    let isVertical = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let adjustType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'reverse';\n    let concatPos = arguments.length > 3 ? arguments[3] : undefined;\n\n    switch (adjustType) {\n      case 'reverse':\n        return this._reversePos(position, isVertical);\n\n      case 'expand':\n        // only happens when position is top/bottom/left/right\n        return this._expandPos(position, concatPos);\n\n      case 'reduce':\n        // only happens when position other than top/bottom/left/right\n        return this._reducePos(position);\n\n      default:\n        return this._reversePos(position, isVertical);\n    }\n  }\n\n  _reversePos() {\n    let position = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    let isVertical = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (isVertical) {\n      if (REGS.TOP.test(position)) {\n        return position.replace('top', 'bottom').replace('Top', 'Bottom');\n      } else if (REGS.BOTTOM.test(position)) {\n        return position.replace('bottom', 'top').replace('Bottom', 'Top');\n      }\n    } else if (REGS.LEFT.test(position)) {\n      return position.replace('left', 'right').replace('Left', 'Right');\n    } else if (REGS.RIGHT.test(position)) {\n      return position.replace('right', 'left').replace('Right', 'Left');\n    }\n\n    return position;\n  }\n\n  _expandPos() {\n    let position = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    let concatPos = arguments.length > 1 ? arguments[1] : undefined;\n    return position.concat(concatPos);\n  }\n\n  _reducePos() {\n    let position = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    // if cur position consists of two directions, remove the last position\n    const found = ['Top', 'Bottom', 'Left', 'Right'].find(pos => position.endsWith(pos));\n    return found ? position.replace(found, '') : position;\n  }\n\n  clearDelayTimer() {\n    if (this._timer) {\n      clearTimeout(this._timer);\n      this._timer = null;\n    }\n  }\n\n  _generateEvent(types) {\n    const eventNames = this._adapter.getEventName();\n\n    const triggerEventSet = {\n      // bind esc keydown on trigger for a11y\n      [eventNames.keydown]: event => {\n        this._handleTriggerKeydown(event);\n      }\n    };\n    let portalEventSet = {};\n\n    switch (types) {\n      case 'focus':\n        triggerEventSet[eventNames.focus] = () => {\n          this.delayShow();\n        };\n\n        triggerEventSet[eventNames.blur] = () => {\n          this.delayHide();\n        };\n\n        portalEventSet = triggerEventSet;\n        break;\n\n      case 'click':\n        triggerEventSet[eventNames.click] = () => {\n          // this.delayShow();\n          this.show();\n        };\n\n        portalEventSet = {}; // Click outside needs special treatment, can not be directly tied to the trigger Element, need to be bound to the document\n\n        break;\n\n      case 'hover':\n        triggerEventSet[eventNames.mouseEnter] = () => {\n          // console.log(e);\n          this.setCache('isClickToHide', false);\n          this.delayShow(); // this.show('trigger');\n        };\n\n        triggerEventSet[eventNames.mouseLeave] = () => {\n          // console.log(e);\n          this.delayHide(); // this.hide('trigger');\n        }; // bind focus to hover trigger for a11y\n\n\n        triggerEventSet[eventNames.focus] = () => {\n          const {\n            disableFocusListener\n          } = this.getProps();\n          !disableFocusListener && this.delayShow();\n        };\n\n        triggerEventSet[eventNames.blur] = () => {\n          const {\n            disableFocusListener\n          } = this.getProps();\n          !disableFocusListener && this.delayHide();\n        };\n\n        portalEventSet = Object.assign({}, triggerEventSet);\n\n        if (this.getProp('clickToHide')) {\n          portalEventSet[eventNames.click] = () => {\n            this.setCache('isClickToHide', true);\n            this.hide();\n          };\n\n          portalEventSet[eventNames.mouseEnter] = () => {\n            if (this.getCache('isClickToHide')) {\n              return;\n            }\n\n            this.delayShow();\n          };\n        }\n\n        break;\n\n      case 'custom':\n        // when trigger type is 'custom', no need to bind eventHandler\n        // show/hide completely depend on props.visible which change by user\n        break;\n\n      default:\n        break;\n    }\n\n    return {\n      triggerEventSet,\n      portalEventSet\n    };\n  }\n\n  _shouldShow() {\n    const visible = this.getProp('visible');\n\n    if (visible) {\n      this.show();\n    } else {// this.hide();\n    }\n  }\n\n  _togglePortalVisible(isVisible) {\n    const nowVisible = this.getState('visible');\n\n    if (nowVisible !== isVisible) {\n      this._adapter.togglePortalVisible(isVisible, () => {\n        if (isVisible) {\n          this._adapter.setInitialFocus();\n        }\n\n        this._adapter.notifyVisibleChange(isVisible);\n      });\n    }\n  }\n\n  _roundPixel(pixel) {\n    if (typeof pixel === 'number') {\n      return Math.round(pixel);\n    }\n\n    return pixel;\n  }\n\n  calcTransformOrigin(position, triggerRect, translateX, translateY) {\n    // eslint-disable-next-line\n    if (position && triggerRect && translateX != null && translateY != null) {\n      if (this.getProp('transformFromCenter')) {\n        if (['topLeft', 'bottomLeft'].includes(position)) {\n          return `${this._roundPixel(triggerRect.width / 2)}px ${-translateY * 100}%`;\n        }\n\n        if (['topRight', 'bottomRight'].includes(position)) {\n          return `calc(100% - ${this._roundPixel(triggerRect.width / 2)}px) ${-translateY * 100}%`;\n        }\n\n        if (['leftTop', 'rightTop'].includes(position)) {\n          return `${-translateX * 100}% ${this._roundPixel(triggerRect.height / 2)}px`;\n        }\n\n        if (['leftBottom', 'rightBottom'].includes(position)) {\n          return `${-translateX * 100}% calc(100% - ${this._roundPixel(triggerRect.height / 2)}px)`;\n        }\n      }\n\n      return `${-translateX * 100}% ${-translateY * 100}%`;\n    }\n\n    return null;\n  }\n\n  calcPosStyle(props) {\n    const {\n      spacing,\n      isOverFlow\n    } = props;\n    const {\n      innerWidth\n    } = window;\n    const triggerRect = (_isEmpty(props.triggerRect) ? props.triggerRect : this._adapter.getTriggerBounding()) || Object.assign({}, defaultRect);\n    const containerRect = (_isEmpty(props.containerRect) ? props.containerRect : this._adapter.getPopupContainerRect()) || Object.assign({}, defaultRect);\n    const wrapperRect = (_isEmpty(props.wrapperRect) ? props.wrapperRect : this._adapter.getWrapperBounding()) || Object.assign({}, defaultRect); // eslint-disable-next-line\n\n    const position = props.position != null ? props.position : this.getProp('position'); // eslint-disable-next-line\n\n    const SPACING = spacing != null ? spacing : this.getProp('spacing');\n    const {\n      arrowPointAtCenter,\n      showArrow,\n      arrowBounding\n    } = this.getProps();\n    const pointAtCenter = showArrow && arrowPointAtCenter;\n\n    const horizontalArrowWidth = _get(arrowBounding, 'width', 24);\n\n    const verticalArrowHeight = _get(arrowBounding, 'width', 24);\n\n    const arrowOffsetY = _get(arrowBounding, 'offsetY', 0);\n\n    const positionOffsetX = 6;\n    const positionOffsetY = 6; // You must use left/top when rendering, using right/bottom does not render the element position correctly\n    // Use left/top + translate to achieve tooltip positioning perfectly without knowing the size of the tooltip expansion layer\n\n    let left;\n    let top;\n    let translateX = 0; // Container x-direction translation distance\n\n    let translateY = 0; // Container y-direction translation distance\n\n    const middleX = triggerRect.left + triggerRect.width / 2;\n    const middleY = triggerRect.top + triggerRect.height / 2;\n    const offsetXWithArrow = positionOffsetX + horizontalArrowWidth / 2;\n    const offsetYWithArrow = positionOffsetY + verticalArrowHeight / 2;\n    const heightDifference = wrapperRect.height - containerRect.height;\n    const widthDifference = wrapperRect.width - containerRect.width;\n    const offsetHeight = heightDifference > 0 ? heightDifference : 0;\n    const offsetWidth = widthDifference > 0 ? widthDifference : 0;\n    const isHeightOverFlow = isOverFlow && isOverFlow[0];\n    const isWidthOverFlow = isOverFlow && isOverFlow[1];\n    const isTriggerNearLeft = middleX - containerRect.left < containerRect.right - middleX;\n    const isTriggerNearTop = middleY - containerRect.top < containerRect.bottom - middleY;\n    const isWrapperWidthOverflow = wrapperRect.width > innerWidth;\n\n    switch (position) {\n      case 'top':\n        // left = middleX;\n        // top = triggerRect.top - SPACING;\n        left = isWidthOverFlow ? isTriggerNearLeft ? containerRect.left + wrapperRect.width / 2 : containerRect.right - wrapperRect.width / 2 + offsetWidth : middleX;\n        top = isHeightOverFlow ? containerRect.bottom + offsetHeight : triggerRect.top - SPACING;\n        translateX = -0.5;\n        translateY = -1;\n        break;\n\n      case 'topLeft':\n        // left = pointAtCenter ? middleX - offsetXWithArrow : triggerRect.left;\n        // top = triggerRect.top - SPACING;\n        left = isWidthOverFlow ? isWrapperWidthOverflow ? containerRect.left : containerRect.right - wrapperRect.width : pointAtCenter ? middleX - offsetXWithArrow : triggerRect.left;\n        top = isHeightOverFlow ? containerRect.bottom + offsetHeight : triggerRect.top - SPACING;\n        translateY = -1;\n        break;\n\n      case 'topRight':\n        // left = pointAtCenter ? middleX + offsetXWithArrow : triggerRect.right;\n        // top = triggerRect.top - SPACING;\n        left = isWidthOverFlow ? containerRect.right + offsetWidth : pointAtCenter ? middleX + offsetXWithArrow : triggerRect.right;\n        top = isHeightOverFlow ? containerRect.bottom + offsetHeight : triggerRect.top - SPACING;\n        translateY = -1;\n        translateX = -1;\n        break;\n\n      case 'left':\n        // left = triggerRect.left - SPACING;\n        // top = middleY;\n        // left = isWidthOverFlow? containerRect.right - SPACING : triggerRect.left - SPACING;\n        left = isWidthOverFlow ? containerRect.right + offsetWidth - SPACING + offsetXWithArrow : triggerRect.left - SPACING;\n        top = isHeightOverFlow ? isTriggerNearTop ? containerRect.top + wrapperRect.height / 2 : containerRect.bottom - wrapperRect.height / 2 + offsetHeight : middleY;\n        translateX = -1;\n        translateY = -0.5;\n        break;\n\n      case 'leftTop':\n        // left = triggerRect.left - SPACING;\n        // top = pointAtCenter ? middleY - offsetYWithArrow : triggerRect.top;\n        left = isWidthOverFlow ? containerRect.right + offsetWidth - SPACING + offsetXWithArrow : triggerRect.left - SPACING;\n        top = isHeightOverFlow ? containerRect.top : pointAtCenter ? middleY - offsetYWithArrow : triggerRect.top;\n        translateX = -1;\n        break;\n\n      case 'leftBottom':\n        // left = triggerRect.left - SPACING;\n        // top = pointAtCenter ? middleY + offsetYWithArrow : triggerRect.bottom;\n        left = isWidthOverFlow ? containerRect.right + offsetWidth - SPACING + offsetXWithArrow : triggerRect.left - SPACING;\n        top = isHeightOverFlow ? containerRect.bottom + offsetHeight : pointAtCenter ? middleY + offsetYWithArrow : triggerRect.bottom;\n        translateX = -1;\n        translateY = -1;\n        break;\n\n      case 'bottom':\n        // left = middleX;\n        // top = triggerRect.top + triggerRect.height + SPACING;\n        left = isWidthOverFlow ? isTriggerNearLeft ? containerRect.left + wrapperRect.width / 2 : containerRect.right - wrapperRect.width / 2 + offsetWidth : middleX;\n        top = isHeightOverFlow ? containerRect.top + offsetYWithArrow - SPACING : triggerRect.top + triggerRect.height + SPACING;\n        translateX = -0.5;\n        break;\n\n      case 'bottomLeft':\n        // left = pointAtCenter ? middleX - offsetXWithArrow : triggerRect.left;\n        // top = triggerRect.bottom + SPACING;\n        left = isWidthOverFlow ? isWrapperWidthOverflow ? containerRect.left : containerRect.right - wrapperRect.width : pointAtCenter ? middleX - offsetXWithArrow : triggerRect.left;\n        top = isHeightOverFlow ? containerRect.top + offsetYWithArrow - SPACING : triggerRect.top + triggerRect.height + SPACING;\n        break;\n\n      case 'bottomRight':\n        // left = pointAtCenter ? middleX + offsetXWithArrow : triggerRect.right;\n        // top = triggerRect.bottom + SPACING;\n        left = isWidthOverFlow ? containerRect.right + offsetWidth : pointAtCenter ? middleX + offsetXWithArrow : triggerRect.right;\n        top = isHeightOverFlow ? containerRect.top + offsetYWithArrow - SPACING : triggerRect.top + triggerRect.height + SPACING;\n        translateX = -1;\n        break;\n\n      case 'right':\n        // left = triggerRect.right + SPACING;\n        // top = middleY;\n        left = isWidthOverFlow ? containerRect.left - SPACING + offsetXWithArrow : triggerRect.right + SPACING;\n        top = isHeightOverFlow ? isTriggerNearTop ? containerRect.top + wrapperRect.height / 2 : containerRect.bottom - wrapperRect.height / 2 + offsetHeight : middleY;\n        translateY = -0.5;\n        break;\n\n      case 'rightTop':\n        // left = triggerRect.right + SPACING;\n        // top = pointAtCenter ? middleY - offsetYWithArrow : triggerRect.top;\n        left = isWidthOverFlow ? containerRect.left - SPACING + offsetXWithArrow : triggerRect.right + SPACING;\n        top = isHeightOverFlow ? containerRect.top : pointAtCenter ? middleY - offsetYWithArrow : triggerRect.top;\n        break;\n\n      case 'rightBottom':\n        // left = triggerRect.right + SPACING;\n        // top = pointAtCenter ? middleY + offsetYWithArrow : triggerRect.bottom;\n        left = isWidthOverFlow ? containerRect.left - SPACING + offsetXWithArrow : triggerRect.right + SPACING;\n        top = isHeightOverFlow ? containerRect.bottom + offsetHeight : pointAtCenter ? middleY + offsetYWithArrow : triggerRect.bottom;\n        translateY = -1;\n        break;\n\n      case 'leftTopOver':\n        left = triggerRect.left - SPACING;\n        top = triggerRect.top - SPACING;\n        break;\n\n      case 'rightTopOver':\n        left = triggerRect.right + SPACING;\n        top = triggerRect.top - SPACING;\n        translateX = -1;\n        break;\n\n      case 'leftBottomOver':\n        left = triggerRect.left - SPACING;\n        top = triggerRect.bottom + SPACING;\n        translateY = -1;\n        break;\n\n      case 'rightBottomOver':\n        left = triggerRect.right + SPACING;\n        top = triggerRect.bottom + SPACING;\n        translateX = -1;\n        translateY = -1;\n        break;\n\n      default:\n        break;\n    }\n\n    const transformOrigin = this.calcTransformOrigin(position, triggerRect, translateX, translateY); // Transform origin\n\n    const _containerIsBody = this._adapter.containerIsBody(); // Calculate container positioning relative to window\n\n\n    left = left - containerRect.left;\n    top = top - containerRect.top;\n    /**\n     * container为body时，如果position不为relative或absolute，这时trigger计算出的top/left会根据html定位（initial containing block）\n     * 此时如果body有margin，则计算出的位置相对于body会有问题 fix issue #1368\n     *\n     * When container is body, if position is not relative or absolute, then the top/left calculated by trigger will be positioned according to html\n     * At this time, if the body has a margin, the calculated position will have a problem relative to the body fix issue #1368\n     */\n\n    if (_containerIsBody && !this._adapter.containerIsRelativeOrAbsolute()) {\n      const documentEleRect = this._adapter.getDocumentElementBounding(); // Represents the left of the body relative to html\n\n\n      left += containerRect.left - documentEleRect.left; // Represents the top of the body relative to html\n\n      top += containerRect.top - documentEleRect.top;\n    } // ContainerRect.scrollLeft to solve the inner scrolling of the container\n\n\n    left = _containerIsBody ? left : left + containerRect.scrollLeft;\n    top = _containerIsBody ? top : top + containerRect.scrollTop;\n    const triggerHeight = triggerRect.height;\n\n    if (this.getProp('showArrow') && !arrowPointAtCenter && triggerHeight <= (verticalArrowHeight / 2 + arrowOffsetY) * 2) {\n      const offsetY = triggerHeight / 2 - (arrowOffsetY + verticalArrowHeight / 2);\n\n      if ((position.includes('Top') || position.includes('Bottom')) && !position.includes('Over')) {\n        top = position.includes('Top') ? top + offsetY : top - offsetY;\n      }\n    } // The left/top value here must be rounded, otherwise it will cause the small triangle to shake\n\n\n    const style = {\n      left: this._roundPixel(left),\n      top: this._roundPixel(top)\n    };\n    let transform = ''; // eslint-disable-next-line\n\n    if (translateX != null) {\n      transform += `translateX(${translateX * 100}%) `;\n      Object.defineProperty(style, 'translateX', {\n        enumerable: false,\n        value: translateX\n      });\n    } // eslint-disable-next-line\n\n\n    if (translateY != null) {\n      transform += `translateY(${translateY * 100}%) `;\n      Object.defineProperty(style, 'translateY', {\n        enumerable: false,\n        value: translateY\n      });\n    } // eslint-disable-next-line\n\n\n    if (transformOrigin != null) {\n      style.transformOrigin = transformOrigin;\n    }\n\n    if (transform) {\n      style.transform = transform;\n    }\n\n    return style;\n  }\n\n  isLR() {\n    let position = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    return position.includes('left') || position.includes('right');\n  }\n\n  isTB() {\n    let position = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    return position.includes('top') || position.includes('bottom');\n  }\n\n  isReverse(rowSpace, reverseSpace, size) {\n    // 原空间不足，反向空间足够\n    // Insufficient original space, enough reverse space\n    return rowSpace < size && reverseSpace > size;\n  }\n\n  isOverFlow(rowSpace, reverseSpace, size) {\n    // 原空间且反向空间都不足\n    // The original space and the reverse space are not enough\n    return rowSpace < size && reverseSpace < size;\n  }\n\n  isHalfOverFlow(posSpace, negSpace, size) {\n    // 正半空间或者负半空间不足，即表示有遮挡，需要偏移\n    // Insufficient positive half space or negative half space means that there is occlusion and needs to be offset\n    return posSpace < size || negSpace < size;\n  }\n\n  isHalfAllEnough(posSpace, negSpace, size) {\n    // 正半空间和负半空间都足够，即表示可以从 topLeft/topRight 变成 top\n    // Both positive and negative half-spaces are sufficient, which means you can change from topLeft/topRight to top\n    return posSpace >= size || negSpace >= size;\n  }\n\n  getReverse(viewOverFlow, containerOverFlow, shouldReverseView, shouldReverseContainer) {\n    /**\n     * 基于视口和容器一起判断，以下几种情况允许从原方向转到反方向，以判断是否应该由top->bottom为例子\n     *\n     * 1. 视口上下空间不足 且 容器上空间❌下空间✅\n     * 2. 视口上空间❌下空间✅ 且 容器上下空间不足\n     * 3. 视口上空间❌下空间✅ 且 容器上空间❌下空间✅\n     *\n     * Based on the judgment of the viewport and the container, the following situations are allowed to turn from the original direction to the opposite direction\n     * to judge whether it should be top->bottom as an example\n     * 1. There is insufficient space above and below the viewport and the space above the container ❌ the space below ✅\n     * 2. The space above the viewport ❌ the space below ✅ and the space above and below the container is insufficient\n     * 3. Viewport upper space ❌ lower space✅ and container upper space ❌ lower space✅\n     */\n    return viewOverFlow && shouldReverseContainer || shouldReverseView && containerOverFlow || shouldReverseView && shouldReverseContainer;\n  } // place the dom correctly\n\n\n  adjustPosIfNeed(position, style, triggerRect, wrapperRect, containerRect) {\n    const {\n      innerWidth,\n      innerHeight\n    } = window;\n    const {\n      spacing,\n      margin\n    } = this.getProps();\n    const marginLeft = typeof margin === 'number' ? margin : margin.marginLeft;\n    const marginTop = typeof margin === 'number' ? margin : margin.marginTop;\n    const marginRight = typeof margin === 'number' ? margin : margin.marginRight;\n    const marginBottom = typeof margin === 'number' ? margin : margin.marginBottom;\n    let isHeightOverFlow = false;\n    let isWidthOverFlow = false;\n\n    if (wrapperRect.width > 0 && wrapperRect.height > 0) {\n      // let clientLeft = left + translateX * wrapperRect.width - containerRect.scrollLeft;\n      // let clientTop = top + translateY * wrapperRect.height - containerRect.scrollTop;\n      // if (this._adapter.containerIsBody() || this._adapter.containerIsRelative()) {\n      //     clientLeft += containerRect.left;\n      //     clientTop += containerRect.top;\n      // }\n      // const clientRight = clientLeft + wrapperRect.width;\n      // const clientBottom = clientTop + wrapperRect.height;\n      // The relative position of the elements on the screen\n      // https://lf3-static.bytednsdoc.com/obj/eden-cn/ptlz_zlp/ljhwZthlaukjlkulzlp/tooltip-pic.svg\n      const clientLeft = triggerRect.left;\n      const clientRight = triggerRect.right;\n      const clientTop = triggerRect.top;\n      const clientBottom = triggerRect.bottom;\n      const restClientLeft = innerWidth - clientLeft;\n      const restClientTop = innerHeight - clientTop;\n      const restClientRight = innerWidth - clientRight;\n      const restClientBottom = innerHeight - clientBottom;\n      const widthIsBigger = wrapperRect.width > triggerRect.width;\n      const heightIsBigger = wrapperRect.height > triggerRect.height; // The wrapperR ect.top|bottom equivalent cannot be directly used here for comparison, which is easy to cause jitter\n      // 基于视口的微调判断\n      // Fine-tuning judgment based on viewport\n\n      const shouldViewReverseTop = clientTop - marginTop < wrapperRect.height + spacing && restClientBottom - marginBottom > wrapperRect.height + spacing;\n      const shouldViewReverseLeft = clientLeft - marginLeft < wrapperRect.width + spacing && restClientRight - marginRight > wrapperRect.width + spacing;\n      const shouldViewReverseBottom = restClientBottom - marginBottom < wrapperRect.height + spacing && clientTop - marginTop > wrapperRect.height + spacing;\n      const shouldViewReverseRight = restClientRight - marginRight < wrapperRect.width + spacing && clientLeft - marginLeft > wrapperRect.width + spacing;\n      const shouldViewReverseTopOver = restClientTop - marginBottom < wrapperRect.height + spacing && clientBottom - marginTop > wrapperRect.height + spacing;\n      const shouldViewReverseBottomOver = clientBottom - marginTop < wrapperRect.height + spacing && restClientTop - marginBottom > wrapperRect.height + spacing;\n      const shouldViewReverseTopSide = restClientTop < wrapperRect.height && clientBottom > wrapperRect.height;\n      const shouldViewReverseBottomSide = clientBottom < wrapperRect.height && restClientTop > wrapperRect.height;\n      const shouldViewReverseLeftSide = restClientLeft < wrapperRect.width && clientRight > wrapperRect.width;\n      const shouldViewReverseRightSide = clientRight < wrapperRect.width && restClientLeft > wrapperRect.width;\n      const shouldReverseTopOver = restClientTop < wrapperRect.height + spacing && clientBottom > wrapperRect.height + spacing;\n      const shouldReverseBottomOver = clientBottom < wrapperRect.height + spacing && restClientTop > wrapperRect.height + spacing;\n      const shouldReverseLeftOver = restClientLeft < wrapperRect.width && clientRight > wrapperRect.width;\n      const shouldReverseRightOver = clientRight < wrapperRect.width && restClientLeft > wrapperRect.width; // 基于容器的微调判断\n      // Fine-tuning judgment based on container\n\n      const clientTopInContainer = clientTop - containerRect.top;\n      const clientLeftInContainer = clientLeft - containerRect.left;\n      const clientBottomInContainer = clientTopInContainer + triggerRect.height;\n      const clientRightInContainer = clientLeftInContainer + triggerRect.width;\n      const restClientBottomInContainer = containerRect.bottom - clientBottom;\n      const restClientRightInContainer = containerRect.right - clientRight;\n      const restClientTopInContainer = restClientBottomInContainer + triggerRect.height;\n      const restClientLeftInContainer = restClientRightInContainer + triggerRect.width; // 当原空间不足，反向空间足够时，可以反向。\n      // When the original space is insufficient and the reverse space is sufficient, the reverse can be performed.\n\n      const shouldContainerReverseTop = this.isReverse(clientTopInContainer - marginTop, restClientBottomInContainer - marginBottom, wrapperRect.height + spacing);\n      const shouldContainerReverseLeft = this.isReverse(clientLeftInContainer - marginLeft, restClientRightInContainer - marginRight, wrapperRect.width + spacing);\n      const shouldContainerReverseBottom = this.isReverse(restClientBottomInContainer - marginBottom, clientTopInContainer - marginTop, wrapperRect.height + spacing);\n      const shouldContainerReverseRight = this.isReverse(restClientRightInContainer - marginRight, clientLeftInContainer - marginLeft, wrapperRect.width + spacing);\n      const shouldContainerReverseTopOver = this.isReverse(restClientTopInContainer - marginBottom, clientBottomInContainer - marginTop, wrapperRect.height + spacing);\n      const shouldContainerReverseBottomOver = this.isReverse(clientBottomInContainer - marginTop, restClientTopInContainer - marginBottom, wrapperRect.height + spacing);\n      const shouldContainerReverseTopSide = this.isReverse(restClientTopInContainer, clientBottomInContainer, wrapperRect.height);\n      const shouldContainerReverseBottomSide = this.isReverse(clientBottomInContainer, restClientTopInContainer, wrapperRect.height);\n      const shouldContainerReverseLeftSide = this.isReverse(restClientLeftInContainer, clientRightInContainer, wrapperRect.width);\n      const shouldContainerReverseRightSide = this.isReverse(clientRightInContainer, restClientLeftInContainer, wrapperRect.width);\n      const halfHeight = triggerRect.height / 2;\n      const halfWidth = triggerRect.width / 2; // 视口, 原空间与反向空间是否都不足判断\n      // Viewport, whether the original space and the reverse space are insufficient to judge\n\n      const isViewYOverFlow = this.isOverFlow(clientTop - marginTop, restClientBottom - marginBottom, wrapperRect.height + spacing);\n      const isViewXOverFlow = this.isOverFlow(clientLeft - marginLeft, restClientRight - marginRight, wrapperRect.width + spacing);\n      const isViewYOverFlowSide = this.isOverFlow(clientBottom - marginTop, restClientTop - marginBottom, wrapperRect.height + spacing);\n      const isViewXOverFlowSide = this.isOverFlow(clientRight - marginLeft, restClientLeft - marginRight, wrapperRect.width + spacing);\n      const isViewYOverFlowSideHalf = this.isHalfOverFlow(clientBottom - halfHeight, restClientTop - halfHeight, wrapperRect.height / 2);\n      const isViewXOverFlowSideHalf = this.isHalfOverFlow(clientRight - halfWidth, restClientLeft - halfWidth, wrapperRect.width / 2);\n      const isViewYEnoughSideHalf = this.isHalfAllEnough(clientBottom - halfHeight, restClientTop - halfHeight, wrapperRect.height / 2);\n      const isViewXEnoughSideHalf = this.isHalfAllEnough(clientRight - halfWidth, restClientLeft - halfWidth, wrapperRect.width / 2); // 容器, 原空间与反向空间是否都不足判断\n      // container, whether the original space and the reverse space are insufficient to judge\n\n      const isContainerYOverFlow = this.isOverFlow(clientTopInContainer - marginTop, restClientBottomInContainer - marginBottom, wrapperRect.height + spacing);\n      const isContainerXOverFlow = this.isOverFlow(clientLeftInContainer - marginLeft, restClientRightInContainer - marginRight, wrapperRect.width + spacing);\n      const isContainerYOverFlowSide = this.isOverFlow(clientBottomInContainer - marginTop, restClientTopInContainer - marginBottom, wrapperRect.height + spacing);\n      const isContainerXOverFlowSide = this.isOverFlow(clientRightInContainer - marginLeft, restClientLeftInContainer - marginRight, wrapperRect.width + spacing);\n      const isContainerYOverFlowSideHalf = this.isHalfOverFlow(clientBottomInContainer - halfHeight, restClientTopInContainer - halfHeight, wrapperRect.height / 2);\n      const isContainerXOverFlowSideHalf = this.isHalfOverFlow(clientRightInContainer - halfWidth, restClientLeftInContainer - halfWidth, wrapperRect.width / 2);\n      const isContainerYEnoughSideHalf = this.isHalfAllEnough(clientBottomInContainer - halfHeight, restClientTopInContainer - halfHeight, wrapperRect.height / 2);\n      const isContainerXEnoughSideHalf = this.isHalfAllEnough(clientRightInContainer - halfWidth, restClientLeftInContainer - halfWidth, wrapperRect.width / 2); // 综合 viewport + container 判断微调，即视口 + 容器都放置不行时才能考虑位置调整\n      // Comprehensive viewport + container judgment fine-tuning, that is, the position adjustment can only be considered when the viewport + container cannot be placed.\n\n      const shouldReverseTop = this.getReverse(isViewYOverFlow, isContainerYOverFlow, shouldViewReverseTop, shouldContainerReverseTop);\n      const shouldReverseLeft = this.getReverse(isViewXOverFlow, isContainerXOverFlow, shouldViewReverseLeft, shouldContainerReverseLeft);\n      const shouldReverseBottom = this.getReverse(isViewYOverFlow, isContainerYOverFlow, shouldViewReverseBottom, shouldContainerReverseBottom);\n      const shouldReverseRight = this.getReverse(isViewXOverFlow, isContainerXOverFlow, shouldViewReverseRight, shouldContainerReverseRight); // const shouldReverseTopOver = this.getReverse(isViewYOverFlowSide, isContainerYOverFlowSide, shouldViewReverseTopOver, shouldContainerReverseTopOver);\n      // const shouldReverseBottomOver = this.getReverse(isViewYOverFlowSide, isContainerYOverFlowSide, shouldViewReverseBottomOver, shouldContainerReverseBottomOver);\n\n      const shouldReverseTopSide = this.getReverse(isViewYOverFlowSide, isContainerYOverFlowSide, shouldViewReverseTopSide, shouldContainerReverseTopSide);\n      const shouldReverseBottomSide = this.getReverse(isViewYOverFlowSide, isContainerYOverFlowSide, shouldViewReverseBottomSide, shouldContainerReverseBottomSide);\n      const shouldReverseLeftSide = this.getReverse(isViewXOverFlowSide, isContainerXOverFlowSide, shouldViewReverseLeftSide, shouldContainerReverseLeftSide);\n      const shouldReverseRightSide = this.getReverse(isViewXOverFlowSide, isContainerXOverFlowSide, shouldViewReverseRightSide, shouldContainerReverseRightSide);\n      const isYOverFlowSideHalf = isViewYOverFlowSideHalf && isContainerYOverFlowSideHalf;\n      const isXOverFlowSideHalf = isViewXOverFlowSideHalf && isContainerXOverFlowSideHalf;\n\n      switch (position) {\n        case 'top':\n          if (shouldReverseTop) {\n            position = this._adjustPos(position, true);\n          }\n\n          if (isXOverFlowSideHalf && (shouldReverseLeftSide || shouldReverseRightSide)) {\n            position = this._adjustPos(position, true, 'expand', shouldReverseLeftSide ? 'Right' : 'Left');\n          }\n\n          break;\n\n        case 'topLeft':\n          if (shouldReverseTop) {\n            position = this._adjustPos(position, true);\n          }\n\n          if (shouldReverseLeftSide && widthIsBigger) {\n            position = this._adjustPos(position);\n          }\n\n          if (isWidthOverFlow && (isViewXEnoughSideHalf || isContainerXEnoughSideHalf)) {\n            position = this._adjustPos(position, true, 'reduce');\n          }\n\n          break;\n\n        case 'topRight':\n          if (shouldReverseTop) {\n            position = this._adjustPos(position, true);\n          }\n\n          if (shouldReverseRightSide && widthIsBigger) {\n            position = this._adjustPos(position);\n          }\n\n          if (isWidthOverFlow && (isViewXEnoughSideHalf || isContainerXEnoughSideHalf)) {\n            position = this._adjustPos(position, true, 'reduce');\n          }\n\n          break;\n\n        case 'left':\n          if (shouldReverseLeft) {\n            position = this._adjustPos(position);\n          }\n\n          if (isYOverFlowSideHalf && (shouldReverseTopSide || shouldReverseBottomSide)) {\n            position = this._adjustPos(position, false, 'expand', shouldReverseTopSide ? 'Bottom' : 'Top');\n          }\n\n          break;\n\n        case 'leftTop':\n          if (shouldReverseLeft) {\n            position = this._adjustPos(position);\n          }\n\n          if (shouldReverseTopSide && heightIsBigger) {\n            position = this._adjustPos(position, true);\n          }\n\n          if (isHeightOverFlow && (isViewYEnoughSideHalf || isContainerYEnoughSideHalf)) {\n            position = this._adjustPos(position, false, 'reduce');\n          }\n\n          break;\n\n        case 'leftBottom':\n          if (shouldReverseLeft) {\n            position = this._adjustPos(position);\n          }\n\n          if (shouldReverseBottomSide && heightIsBigger) {\n            position = this._adjustPos(position, true);\n          }\n\n          if (isHeightOverFlow && (isViewYEnoughSideHalf || isContainerYEnoughSideHalf)) {\n            position = this._adjustPos(position, false, 'reduce');\n          }\n\n          break;\n\n        case 'bottom':\n          if (shouldReverseBottom) {\n            position = this._adjustPos(position, true);\n          }\n\n          if (isXOverFlowSideHalf && (shouldReverseLeftSide || shouldReverseRightSide)) {\n            position = this._adjustPos(position, true, 'expand', shouldReverseLeftSide ? 'Right' : 'Left');\n          }\n\n          break;\n\n        case 'bottomLeft':\n          if (shouldReverseBottom) {\n            position = this._adjustPos(position, true);\n          }\n\n          if (shouldReverseLeftSide && widthIsBigger) {\n            position = this._adjustPos(position);\n          }\n\n          if (isWidthOverFlow && (isViewXEnoughSideHalf || isContainerXEnoughSideHalf)) {\n            position = this._adjustPos(position, true, 'reduce');\n          }\n\n          break;\n\n        case 'bottomRight':\n          if (shouldReverseBottom) {\n            position = this._adjustPos(position, true);\n          }\n\n          if (shouldReverseRightSide && widthIsBigger) {\n            position = this._adjustPos(position);\n          }\n\n          if (isWidthOverFlow && (isViewXEnoughSideHalf || isContainerXEnoughSideHalf)) {\n            position = this._adjustPos(position, true, 'reduce');\n          }\n\n          break;\n\n        case 'right':\n          if (shouldReverseRight) {\n            position = this._adjustPos(position);\n          }\n\n          if (isYOverFlowSideHalf && (shouldReverseTopSide || shouldReverseBottomSide)) {\n            position = this._adjustPos(position, false, 'expand', shouldReverseTopSide ? 'Bottom' : 'Top');\n          }\n\n          break;\n\n        case 'rightTop':\n          if (shouldReverseRight) {\n            position = this._adjustPos(position);\n          }\n\n          if (shouldReverseTopSide && heightIsBigger) {\n            position = this._adjustPos(position, true);\n          }\n\n          if (isHeightOverFlow && (isViewYEnoughSideHalf || isContainerYEnoughSideHalf)) {\n            position = this._adjustPos(position, false, 'reduce');\n          }\n\n          break;\n\n        case 'rightBottom':\n          if (shouldReverseRight) {\n            position = this._adjustPos(position);\n          }\n\n          if (shouldReverseBottomSide && heightIsBigger) {\n            position = this._adjustPos(position, true);\n          }\n\n          if (isHeightOverFlow && (isViewYEnoughSideHalf || isContainerYEnoughSideHalf)) {\n            position = this._adjustPos(position, false, 'reduce');\n          }\n\n          break;\n\n        case 'leftTopOver':\n          if (shouldReverseTopOver) {\n            position = this._adjustPos(position, true);\n          }\n\n          if (shouldReverseLeftOver) {\n            position = this._adjustPos(position);\n          }\n\n          break;\n\n        case 'leftBottomOver':\n          if (shouldReverseBottomOver) {\n            position = this._adjustPos(position, true);\n          }\n\n          if (shouldReverseLeftOver) {\n            position = this._adjustPos(position);\n          }\n\n          break;\n\n        case 'rightTopOver':\n          if (shouldReverseTopOver) {\n            position = this._adjustPos(position, true);\n          }\n\n          if (shouldReverseRightOver) {\n            position = this._adjustPos(position);\n          }\n\n          break;\n\n        case 'rightBottomOver':\n          if (shouldReverseBottomOver) {\n            position = this._adjustPos(position, true);\n          }\n\n          if (shouldReverseRightOver) {\n            position = this._adjustPos(position);\n          }\n\n          break;\n\n        default:\n          break;\n      } // 判断溢出 Judgment overflow\n      // 上下方向 top and bottom\n\n\n      if (this.isTB(position)) {\n        isHeightOverFlow = isViewYOverFlow && isContainerYOverFlow; // Related PR: https://github.com/DouyinFE/semi-design/pull/1297\n        // If clientRight or restClientRight less than 0, means that the left and right parts of the trigger are blocked\n        // Then the display of the wrapper will also be affected, make width overflow to offset the wrapper\n\n        if (position === 'top' || position === 'bottom') {\n          isWidthOverFlow = isViewXOverFlowSideHalf && isContainerXOverFlowSideHalf || clientRight < 0 || restClientRight < 0;\n        } else {\n          isWidthOverFlow = isViewXOverFlowSide && isContainerXOverFlowSide || clientRight < 0 || restClientRight < 0;\n        }\n      } // 左右方向 left and right\n\n\n      if (this.isLR(position)) {\n        isWidthOverFlow = isViewXOverFlow && isContainerXOverFlow; // If clientTop or restClientTop less than 0, means that the top and bottom parts of the trigger are blocked\n        // Then the display of the wrapper will also be affected, make height overflow to offset the wrapper\n\n        if (position === 'left' || position === 'right') {\n          isHeightOverFlow = isViewYOverFlowSideHalf && isContainerYOverFlowSideHalf || clientTop < 0 || restClientTop < 0;\n        } else {\n          isHeightOverFlow = isViewYOverFlowSide && isContainerYOverFlowSide || clientTop < 0 || restClientTop < 0;\n        }\n      }\n    }\n\n    return {\n      position,\n      isHeightOverFlow,\n      isWidthOverFlow\n    };\n  }\n\n  _bindScrollEvent() {\n    this._adapter.registerScrollHandler(() => this.calcPosition()); // Capture scroll events on the window to determine whether the current scrolling area (e.target) will affect the positioning of the pop-up layer relative to the viewport when scrolling\n    // (By determining whether the e.target contains the triggerDom of the current tooltip) If so, the pop-up layer will also be affected and needs to be repositioned\n\n  }\n\n  unBindScrollEvent() {\n    this._adapter.unregisterScrollHandler();\n  }\n\n  _initContainerPosition() {\n    this._adapter.updateContainerPosition();\n  }\n\n  _handleTriggerKeydown(event) {\n    const {\n      closeOnEsc,\n      disableArrowKeyDown\n    } = this.getProps();\n\n    const container = this._adapter.getContainer();\n\n    const focusableElements = this._adapter.getFocusableElements(container);\n\n    const focusableNum = focusableElements.length;\n\n    switch (event && event.key) {\n      case \"Escape\":\n        handlePrevent(event);\n        closeOnEsc && this._handleEscKeyDown(event);\n        break;\n\n      case \"ArrowUp\":\n        // when disableArrowKeyDown is true, disable tooltip's arrow keyboard event action\n        !disableArrowKeyDown && focusableNum && this._handleTriggerArrowUpKeydown(focusableElements, event);\n        break;\n\n      case \"ArrowDown\":\n        !disableArrowKeyDown && focusableNum && this._handleTriggerArrowDownKeydown(focusableElements, event);\n        break;\n\n      default:\n        break;\n    }\n  }\n  /**\n   * focus trigger\n   *\n   * when trigger is 'focus' or 'hover', onFocus is bind to show popup\n   * if we focus trigger, popup will show again\n   *\n   * 如果 trigger 是 focus 或者 hover，则它绑定了 onFocus，这里我们如果重新 focus 的话，popup 会再次打开\n   * 因此 returnFocusOnClose 只支持 click trigger\n   */\n\n\n  focusTrigger() {\n    const {\n      trigger,\n      returnFocusOnClose,\n      preventScroll\n    } = this.getProps();\n\n    if (returnFocusOnClose && trigger !== 'custom') {\n      const triggerNode = this._adapter.getTriggerNode();\n\n      if (triggerNode && 'focus' in triggerNode) {\n        triggerNode.focus({\n          preventScroll\n        });\n      }\n    }\n  }\n\n  _handleEscKeyDown(event) {\n    const {\n      trigger\n    } = this.getProps();\n\n    if (trigger !== 'custom') {\n      // Move the focus into the trigger first and then close the pop-up layer \n      // to avoid the problem of opening the pop-up layer again when the focus returns to the trigger in the case of hover and focus\n      this.focusTrigger();\n      this.hide();\n    }\n\n    this._adapter.notifyEscKeydown(event);\n  }\n\n  _handleContainerTabKeyDown(focusableElements, event) {\n    const {\n      preventScroll\n    } = this.getProps();\n\n    const activeElement = this._adapter.getActiveElement();\n\n    const isLastCurrentFocus = focusableElements[focusableElements.length - 1] === activeElement;\n\n    if (isLastCurrentFocus) {\n      focusableElements[0].focus({\n        preventScroll\n      });\n      event.preventDefault(); // prevent browser default tab move behavior\n    }\n  }\n\n  _handleContainerShiftTabKeyDown(focusableElements, event) {\n    const {\n      preventScroll\n    } = this.getProps();\n\n    const activeElement = this._adapter.getActiveElement();\n\n    const isFirstCurrentFocus = focusableElements[0] === activeElement;\n\n    if (isFirstCurrentFocus) {\n      focusableElements[focusableElements.length - 1].focus({\n        preventScroll\n      });\n      event.preventDefault(); // prevent browser default tab move behavior\n    }\n  }\n\n  _handleTriggerArrowDownKeydown(focusableElements, event) {\n    const {\n      preventScroll\n    } = this.getProps();\n    focusableElements[0].focus({\n      preventScroll\n    });\n    event.preventDefault(); // prevent browser default scroll behavior\n  }\n\n  _handleTriggerArrowUpKeydown(focusableElements, event) {\n    const {\n      preventScroll\n    } = this.getProps();\n    focusableElements[focusableElements.length - 1].focus({\n      preventScroll\n    });\n    event.preventDefault(); // prevent browser default scroll behavior\n  }\n\n}"],
  "mappings": "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",
  "names": ["_isEmpty", "_get"]
}
