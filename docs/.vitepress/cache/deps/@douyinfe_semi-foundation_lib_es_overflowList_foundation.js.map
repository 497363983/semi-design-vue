{
  "version": 3,
  "sources": ["../../../../node_modules/.pnpm/@douyinfe+semi-foundation@2.34.0/node_modules/@douyinfe/semi-foundation/lib/es/overflowList/foundation.js"],
  "sourcesContent": ["import _cloneDeep from \"lodash/cloneDeep\";\nimport _get from \"lodash/get\";\nimport BaseFoundation from '../base/foundation';\nimport { strings } from './constants';\nconst Boundary = strings.BOUNDARY_MAP;\nconst OverflowDirection = strings.OVERFLOW_DIR;\n\nclass OverflowListFoundation extends BaseFoundation {\n  constructor(adapter) {\n    super(Object.assign({}, adapter));\n    this.previousY = undefined;\n\n    this.isScrollMode = () => {\n      const {\n        renderMode\n      } = this.getProps();\n      return renderMode === 'scroll';\n    };\n\n    this.getReversedItems = () => {\n      const {\n        items\n      } = this.getProps();\n      return _cloneDeep(items).reverse();\n    };\n  }\n\n  getOverflowItem() {\n    const {\n      items\n    } = this.getProps();\n    const {\n      visibleState,\n      overflow\n    } = this.getStates();\n\n    if (!this.isScrollMode()) {\n      return overflow;\n    }\n\n    const visibleStateArr = items.map(_ref => {\n      let {\n        key\n      } = _ref;\n      return Boolean(visibleState.get(key));\n    });\n    const visibleStart = visibleStateArr.indexOf(true);\n    const visibleEnd = visibleStateArr.lastIndexOf(true);\n    const overflowList = [];\n    overflowList[0] = visibleStart >= 0 ? items.slice(0, visibleStart) : [];\n    overflowList[1] = visibleEnd >= 0 ? items.slice(visibleEnd + 1, items.length) : items;\n    return overflowList;\n  }\n\n  handleIntersect(entries) {\n    const visibleState = _cloneDeep(this.getState('visibleState'));\n\n    const res = {};\n    entries.forEach(entry => {\n      const itemKey = _get(entry, 'target.dataset.scrollkey');\n\n      const visible = entry.isIntersecting;\n      res[itemKey] = entry;\n      visibleState.set(itemKey, visible);\n    });\n    let someItemVisible = false;\n\n    for (const value of visibleState.values()) {\n      if (value) {\n        someItemVisible = true;\n        break;\n      }\n    } // Any item is visible, indicating that the List is visible\n\n\n    const wholeListVisible = someItemVisible; // If scrolling in the vertical direction makes the List invisible, no processing is required. \n    // If this.previousY is undefined, it means that the List is mounted for the first time and will not be processed.\n\n    const [entry1] = entries;\n    const currentY = entry1.boundingClientRect.y;\n\n    if (!wholeListVisible && this.previousY !== undefined && currentY !== this.previousY) {\n      this.previousY = currentY;\n      return;\n    }\n\n    this.previousY = currentY;\n\n    this._adapter.updateVisibleState(visibleState);\n\n    this._adapter.notifyIntersect(res);\n  }\n\n  handleCollapseOverflow() {\n    const {\n      minVisibleItems,\n      collapseFrom\n    } = this.getProps();\n    const {\n      overflowWidth,\n      containerWidth,\n      pivot: statePivot,\n      overflowStatus\n    } = this.getStates();\n    const {\n      items,\n      onOverflow\n    } = this.getProps();\n    let itemWidths = overflowWidth,\n        _pivot = 0;\n    let overflowed = false;\n\n    for (const size of this._adapter.getItemSizeMap().values()) {\n      itemWidths += size; // 触发overflow\n\n      if (itemWidths > containerWidth) {\n        overflowed = true;\n        break;\n      } // 顺利遍历完整个列表，说明不存在overflow，直接渲染全部\n\n\n      if (_pivot === items.length - 1) {\n        this._adapter.updateStates({\n          overflowStatus: \"normal\",\n          pivot: items.length - 1,\n          visible: items,\n          overflow: []\n        });\n\n        break;\n      }\n\n      _pivot++;\n    }\n\n    if (overflowed) {\n      const pivot = Math.max(minVisibleItems, _pivot);\n      const isCollapseFromStart = collapseFrom === Boundary.START;\n      const visible = isCollapseFromStart ? this.getReversedItems().slice(0, pivot).reverse() : items.slice(0, pivot);\n      const overflow = isCollapseFromStart ? this.getReversedItems().slice(pivot).reverse() : items.slice(pivot);\n\n      this._adapter.updateStates({\n        overflowStatus: \"overflowed\",\n        pivot: pivot,\n        visible,\n        overflow\n      }); // trigger onOverflow\n\n\n      if (statePivot !== pivot) {\n        onOverflow(overflow);\n      }\n\n      return;\n    }\n  }\n\n}\n\nexport default OverflowListFoundation;"],
  "mappings": "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",
  "names": ["_cloneDeep", "_get", "foundation_default"]
}
