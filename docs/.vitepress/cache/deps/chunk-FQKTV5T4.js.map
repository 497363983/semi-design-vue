{
  "version": 3,
  "sources": ["../../../../node_modules/.pnpm/@douyinfe+semi-foundation@2.34.0/node_modules/@douyinfe/semi-foundation/lib/es/transfer/transferUtils.js"],
  "sourcesContent": ["import _omit from \"lodash/omit\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { strings } from './constants';\nexport function _generateGroupedData(dataSource) {\n  const newData = [];\n\n  for (const group of dataSource) {\n    group.children.forEach(item => {\n      const {\n        children\n      } = group,\n            rest = __rest(group, [\"children\"]);\n\n      newData.push(Object.assign(Object.assign({}, item), {\n        _parent: rest\n      }));\n    });\n  }\n\n  return newData;\n} // DFS\n\nexport function _generateTreeData(dataSource) {\n  const newData = [];\n  const stack = [...dataSource].reverse();\n\n  while (stack.length) {\n    const current = stack.pop();\n    current.path = current.path || [_omit(current, ['children'])];\n\n    if (current.children && Array.isArray(current.children)) {\n      const nodes = current.children;\n\n      for (let i = nodes.length - 1; i >= 0; i--) {\n        const child = Object.assign({}, nodes[i]);\n        child.path = [].concat(current.path).concat(_omit(child, ['children']));\n        stack.push(child);\n      }\n    } else {\n      current.isLeaf = true;\n    }\n\n    newData.push(_omit(current, ['children']));\n  }\n\n  return newData;\n}\nexport function _generateDataByType(dataSource, type) {\n  const newData = dataSource.slice() || [];\n\n  if (type === strings.TYPE_GROUP_LIST) {\n    return _generateGroupedData(newData);\n  }\n\n  if (type === strings.TYPE_TREE_TO_LIST) {\n    return _generateTreeData(newData);\n  }\n\n  return newData;\n}\nexport function _generateSelectedItems(value, data) {\n  const selectedItems = new Map();\n  value.forEach(val => {\n    const index = data.findIndex(option => option.value === val);\n\n    if (index !== -1) {\n      const option = data[index];\n      selectedItems.set(option.key, option);\n    }\n  });\n  return selectedItems;\n}"],
  "mappings": ";;;;;;;;;;;AAAA,kBAAkB;AAElB,IAAI,SAAgC,SAAU,GAAG,GAAG;AAClD,MAAI,IAAI,CAAC;AAET,WAAS,KAAK;AAAG,QAAI,OAAO,UAAU,eAAe,KAAK,GAAG,CAAC,KAAK,EAAE,QAAQ,CAAC,IAAI;AAAG,QAAE,CAAC,IAAI,EAAE,CAAC;AAE/F,MAAI,KAAK,QAAQ,OAAO,OAAO,0BAA0B;AAAY,aAAS,IAAI,GAAG,IAAI,OAAO,sBAAsB,CAAC,GAAG,IAAI,EAAE,QAAQ,KAAK;AAC3I,UAAI,EAAE,QAAQ,EAAE,CAAC,CAAC,IAAI,KAAK,OAAO,UAAU,qBAAqB,KAAK,GAAG,EAAE,CAAC,CAAC;AAAG,UAAE,EAAE,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AAAA,IAClG;AACA,SAAO;AACT;AAGO,SAAS,qBAAqB,YAAY;AAC/C,QAAM,UAAU,CAAC;AAEjB,aAAW,SAAS,YAAY;AAC9B,UAAM,SAAS,QAAQ,UAAQ;AAC7B,YAAM;AAAA,QACJ;AAAA,MACF,IAAI,OACE,OAAO,OAAO,OAAO,CAAC,UAAU,CAAC;AAEvC,cAAQ,KAAK,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,IAAI,GAAG;AAAA,QAClD,SAAS;AAAA,MACX,CAAC,CAAC;AAAA,IACJ,CAAC;AAAA,EACH;AAEA,SAAO;AACT;AAEO,SAAS,kBAAkB,YAAY;AAC5C,QAAM,UAAU,CAAC;AACjB,QAAM,QAAQ,CAAC,GAAG,UAAU,EAAE,QAAQ;AAEtC,SAAO,MAAM,QAAQ;AACnB,UAAM,UAAU,MAAM,IAAI;AAC1B,YAAQ,OAAO,QAAQ,QAAQ,KAAC,YAAAA,SAAM,SAAS,CAAC,UAAU,CAAC,CAAC;AAE5D,QAAI,QAAQ,YAAY,MAAM,QAAQ,QAAQ,QAAQ,GAAG;AACvD,YAAM,QAAQ,QAAQ;AAEtB,eAAS,IAAI,MAAM,SAAS,GAAG,KAAK,GAAG,KAAK;AAC1C,cAAM,QAAQ,OAAO,OAAO,CAAC,GAAG,MAAM,CAAC,CAAC;AACxC,cAAM,OAAO,CAAC,EAAE,OAAO,QAAQ,IAAI,EAAE,WAAO,YAAAA,SAAM,OAAO,CAAC,UAAU,CAAC,CAAC;AACtE,cAAM,KAAK,KAAK;AAAA,MAClB;AAAA,IACF,OAAO;AACL,cAAQ,SAAS;AAAA,IACnB;AAEA,YAAQ,SAAK,YAAAA,SAAM,SAAS,CAAC,UAAU,CAAC,CAAC;AAAA,EAC3C;AAEA,SAAO;AACT;AACO,SAAS,oBAAoB,YAAY,MAAM;AACpD,QAAM,UAAU,WAAW,MAAM,KAAK,CAAC;AAEvC,MAAI,SAAS,QAAQ,iBAAiB;AACpC,WAAO,qBAAqB,OAAO;AAAA,EACrC;AAEA,MAAI,SAAS,QAAQ,mBAAmB;AACtC,WAAO,kBAAkB,OAAO;AAAA,EAClC;AAEA,SAAO;AACT;AACO,SAAS,uBAAuB,OAAO,MAAM;AAClD,QAAM,gBAAgB,oBAAI,IAAI;AAC9B,QAAM,QAAQ,SAAO;AACnB,UAAM,QAAQ,KAAK,UAAU,YAAU,OAAO,UAAU,GAAG;AAE3D,QAAI,UAAU,IAAI;AAChB,YAAM,SAAS,KAAK,KAAK;AACzB,oBAAc,IAAI,OAAO,KAAK,MAAM;AAAA,IACtC;AAAA,EACF,CAAC;AACD,SAAO;AACT;",
  "names": ["_omit"]
}
