{
  "version": 3,
  "sources": ["../../../../node_modules/.pnpm/@douyinfe+semi-foundation@2.34.0/node_modules/@douyinfe/semi-foundation/lib/es/navigation/subNavFoundation.js"],
  "sourcesContent": ["import BaseFoundation from '../base/foundation';\nimport isEnterPress from '../utils/isEnterPress';\n\nconst addKeys = function addKeys() {\n  let originKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  const keySet = new Set(originKeys);\n\n  for (var _len = arguments.length, willAddKeys = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    willAddKeys[_key - 1] = arguments[_key];\n  }\n\n  willAddKeys.forEach(key => key && keySet.add(key));\n  return Array.from(keySet);\n};\n\nconst removeKeys = function removeKeys() {\n  let originKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  const keySet = new Set(originKeys);\n\n  for (var _len2 = arguments.length, willRemoveKeys = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    willRemoveKeys[_key2 - 1] = arguments[_key2];\n  }\n\n  willRemoveKeys.forEach(key => key && keySet.delete(key));\n  return Array.from(keySet);\n};\n\nexport default class SubNavFoundation extends BaseFoundation {\n  constructor(adapter) {\n    super(Object.assign({}, adapter));\n  }\n\n  init() {\n    // this.log('invoke SubNavFoundation init()');\n    this._timer = null;\n  }\n\n  destroy() {} // eslint-disable-line\n\n\n  clearDelayTimer() {\n    if (this._timer) {\n      clearTimeout(this._timer);\n      this._timer = null;\n    }\n  }\n\n  isValidKey(itemKey) {\n    // eslint-disable-next-line eqeqeq\n    return itemKey != null && (typeof itemKey === 'number' || typeof itemKey === 'string');\n  }\n\n  handleDropdownVisibleChange(visible) {\n    const itemKey = this.getProp('itemKey');\n\n    const openKeysIsControlled = this._adapter.getOpenKeysIsControlled();\n\n    const canUpdateOpenKeys = this._adapter.getCanUpdateOpenKeys();\n\n    const rawOpenKeys = this._adapter.getOpenKeys();\n\n    const openKeys = visible ? addKeys(rawOpenKeys, itemKey) : removeKeys(rawOpenKeys, itemKey);\n    this.clearDelayTimer();\n\n    if (!openKeysIsControlled) {\n      if (canUpdateOpenKeys) {\n        this._adapter.updateOpen(visible);\n      } // this._adapter.updateIsHovered(visible);\n\n    }\n\n    this._adapter.notifyGlobalOpenChange({\n      itemKey,\n      openKeys,\n      isOpen: visible\n    });\n  }\n  /**\n   *\n   * @param {Event} e\n   * @param {HTMLElement} titleRef\n   */\n\n\n  handleClick(e, titleRef) {\n    const {\n      itemKey,\n      disabled\n    } = this.getProps();\n\n    if (disabled) {\n      return;\n    } // this.log(e, titleRef, titleRef.contains(e.target));\n\n\n    const clickedDomIsTitle = titleRef && titleRef.contains(e.target);\n    let isOpen = Boolean(this._adapter.getIsOpen());\n\n    if (!clickedDomIsTitle) {\n      isOpen = false;\n    } else {\n      isOpen = !isOpen;\n    }\n\n    const openKeys = isOpen ? addKeys(this._adapter.getOpenKeys(), itemKey) : removeKeys(this._adapter.getOpenKeys(), itemKey);\n    const cbVal = {\n      itemKey,\n      openKeys,\n      isOpen,\n      domEvent: e\n    };\n\n    const openKeysIsControlled = this._adapter.getOpenKeysIsControlled();\n\n    const canUpdateOpenKeys = this._adapter.getCanUpdateOpenKeys();\n\n    if (!openKeysIsControlled && canUpdateOpenKeys) {\n      this._adapter.updateOpen(isOpen);\n    }\n\n    this._adapter.notifyGlobalOpenChange(cbVal);\n\n    this._adapter.notifyGlobalOnClick(cbVal);\n  }\n  /**\n   * A11y: simulate sub nav click\n   * @param e\n   * @param titleRef\n   */\n\n\n  handleKeyPress(e, titleRef) {\n    if (isEnterPress(e)) {\n      this.handleClick(e, titleRef);\n    }\n  }\n\n}"],
  "mappings": "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",
  "names": ["addKeys", "removeKeys"]
}
