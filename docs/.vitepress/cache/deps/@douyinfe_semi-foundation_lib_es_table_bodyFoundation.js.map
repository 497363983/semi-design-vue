{
  "version": 3,
  "sources": ["../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/findLastIndex.js", "../../../../node_modules/.pnpm/@douyinfe+semi-foundation@2.34.0/node_modules/@douyinfe/semi-foundation/lib/es/table/bodyFoundation.js"],
  "sourcesContent": ["var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * This method is like `_.findIndex` except that it iterates over elements\n * of `collection` from right to left.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=array.length-1] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': true },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': false }\n * ];\n *\n * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n * // => 2\n *\n * // The `_.matches` iteratee shorthand.\n * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n * // => 0\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findLastIndex(users, ['active', false]);\n * // => 2\n *\n * // The `_.property` iteratee shorthand.\n * _.findLastIndex(users, 'active');\n * // => 0\n */\nfunction findLastIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = length - 1;\n  if (fromIndex !== undefined) {\n    index = toInteger(fromIndex);\n    index = fromIndex < 0\n      ? nativeMax(length + index, 0)\n      : nativeMin(index, length - 1);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index, true);\n}\n\nmodule.exports = findLastIndex;\n", "import _isObject from \"lodash/isObject\";\nimport _findLastIndex from \"lodash/findLastIndex\";\nimport _isMap from \"lodash/isMap\";\nimport _includes from \"lodash/includes\";\nimport _get from \"lodash/get\";\nimport BaseFoundation from '../base/foundation';\nimport { strings } from './constants';\nimport { getRecordKey, genExpandedRowKey, getRecordChildren, expandBtnShouldInRow } from './utils';\nexport default class TableBodyFoundation extends BaseFoundation {\n  init() {\n    this.initVirtualizedData();\n    this.initExpandBtnShouldInRow();\n  }\n\n  destroy() {\n    this.unobserveBodyResize();\n  }\n\n  initVirtualizedData(cb) {\n    this._adapter.setVirtualizedData(this.flattenData(this.getProp('dataSource')), cb);\n  }\n\n  initExpandBtnShouldInRow(newExpandRelatedProps) {\n    const props = this.getProps(); // TODO check: this._adapter.getProps -> this.getProps\n\n    const cachedExpandBtnShouldInRow = expandBtnShouldInRow(props);\n\n    this._adapter.setCachedExpandBtnShouldInRow(cachedExpandBtnShouldInRow);\n\n    if (!_isObject(newExpandRelatedProps) && !newExpandRelatedProps) {\n      const expandRelatedProps = strings.EXPAND_RELATED_PROPS; // eslint-disable-next-line no-param-reassign\n\n      newExpandRelatedProps = expandRelatedProps.map(key => _get(props, key, undefined));\n    }\n\n    this._adapter.setCachedExpandRelatedProps(newExpandRelatedProps);\n  }\n\n  flattenData() {\n    let dataSource = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    let level = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let parentKeys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    let childrenKeys = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n    const flattenData = [];\n    const {\n      rowKey,\n      childrenRecordName,\n      expandedRowRender,\n      expandedRowKeys,\n      groups\n    } = this.getProps();\n\n    if (level === 0 && _isMap(groups)) {\n      groups.forEach((set, key) => {\n        const firstIndex = dataSource.findIndex(record => set.has(getRecordKey(record, rowKey)));\n\n        if (firstIndex > -1) {\n          const lastIndex = _findLastIndex(dataSource, record => set.has(getRecordKey(record, rowKey)));\n\n          const expanded = _includes(expandedRowKeys, key);\n\n          flattenData.push({\n            key,\n            level,\n            sectionRow: true,\n            group: set,\n            groupKey: key,\n            expanded\n          });\n\n          if (expanded) {\n            flattenData.push(...this.flattenData(dataSource.slice(firstIndex, lastIndex + 1), level + 1, [...parentKeys], [...childrenKeys]));\n          }\n        }\n      });\n    } else {\n      dataSource.forEach((record, index) => {\n        const recordKey = getRecordKey(record, rowKey);\n        const children = getRecordChildren(record, childrenRecordName);\n\n        if (level) {\n          childrenKeys.push(recordKey);\n        }\n\n        const item = {\n          key: recordKey,\n          record,\n          level,\n          parentKeys: [...parentKeys],\n          childrenKeys: [...childrenKeys]\n        };\n        flattenData.push(item);\n        const extras = [];\n\n        if (_includes(expandedRowKeys, recordKey)) {\n          if (Array.isArray(children) && children.length) {\n            extras.push(...this.flattenData(children, level + 1, [...item.parentKeys], [...item.childrenKeys]));\n          } else if (expandedRowRender) {\n            extras.push({\n              key: genExpandedRowKey(recordKey),\n              level,\n              expandedRow: true,\n              record\n            });\n          }\n\n          flattenData.push(...extras);\n        }\n      });\n    }\n\n    return flattenData;\n  }\n  /**\n   * Use ResizeObserver to monitor changes in the size of the body content area, and notify Table to recalculate if it changes. columns #1219\n   * (Only monitor the scroll.y scene, other scenes are not monitored, because the header of the scroll.y scene is a separate table, and a scrollbar column will be inserted)\n   */\n\n\n  observeBodyResize(bodyDOM) {\n    const {\n      scroll\n    } = this.getProps(); // TODO check: this._adapter.getProps -> this.getProps\n\n    if (_get(scroll, 'y')) {\n      return this._adapter.observeBodyResize(bodyDOM);\n    }\n  }\n\n  unobserveBodyResize() {\n    return this._adapter.unobserveBodyResize();\n  }\n\n}"],
  "mappings": "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",
  "names": ["_isObject", "_get", "_isMap", "_findLastIndex", "_includes"]
}
