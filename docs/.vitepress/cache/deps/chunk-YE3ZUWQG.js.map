{
  "version": 3,
  "sources": ["../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/unset.js", "../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/toPath.js", "../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_baseHas.js", "../../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/has.js", "../../../../node_modules/.pnpm/@douyinfe+semi-foundation@2.34.0/node_modules/@douyinfe/semi-foundation/lib/es/utils/object.js"],
  "sourcesContent": ["var baseUnset = require('./_baseUnset');\n\n/**\n * Removes the property at `path` of `object`.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n * _.unset(object, 'a[0].b.c');\n * // => true\n *\n * console.log(object);\n * // => { 'a': [{ 'b': {} }] };\n *\n * _.unset(object, ['a', '0', 'b', 'c']);\n * // => true\n *\n * console.log(object);\n * // => { 'a': [{ 'b': {} }] };\n */\nfunction unset(object, path) {\n  return object == null ? true : baseUnset(object, path);\n}\n\nmodule.exports = unset;\n", "var arrayMap = require('./_arrayMap'),\n    copyArray = require('./_copyArray'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol'),\n    stringToPath = require('./_stringToPath'),\n    toKey = require('./_toKey'),\n    toString = require('./toString');\n\n/**\n * Converts `value` to a property path array.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Util\n * @param {*} value The value to convert.\n * @returns {Array} Returns the new property path array.\n * @example\n *\n * _.toPath('a.b.c');\n * // => ['a', 'b', 'c']\n *\n * _.toPath('a[0].b.c');\n * // => ['a', '0', 'b', 'c']\n */\nfunction toPath(value) {\n  if (isArray(value)) {\n    return arrayMap(value, toKey);\n  }\n  return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n}\n\nmodule.exports = toPath;\n", "/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.has` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHas(object, key) {\n  return object != null && hasOwnProperty.call(object, key);\n}\n\nmodule.exports = baseHas;\n", "var baseHas = require('./_baseHas'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct property of `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = { 'a': { 'b': 2 } };\n * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.has(object, 'a');\n * // => true\n *\n * _.has(object, 'a.b');\n * // => true\n *\n * _.has(object, ['a', 'b']);\n * // => true\n *\n * _.has(other, 'a');\n * // => false\n */\nfunction has(object, path) {\n  return object != null && hasPath(object, path, baseHas);\n}\n\nmodule.exports = has;\n", "import _isObject from \"lodash/isObject\";\nimport _isNumber from \"lodash/isNumber\";\nimport _values from \"lodash/values\";\nimport _unset from \"lodash/unset\";\nimport _toPath from \"lodash/toPath\";\nimport _has from \"lodash/has\";\nimport _set from \"lodash/set\";\nimport _get from \"lodash/get\";\n\nconst pathToArrayElem = path => {\n  const pathArray = _toPath(path); // internal-issues:673\n\n\n  const justNumber = _isNumber(path) && pathArray.length === 1;\n  return justNumber ? false : Number.isInteger(+pathArray[pathArray.length - 1]);\n};\n\nfunction isEmptyObject(target) {\n  /**\n   *  var a = {};\n   *  var b = { c: undefined }\n   *  var d = {\n   *      e: function(){},\n   *      f: Symbol(''),\n   *  }\n   *  the result of JSON.stringify(a/b/d) are same: '{}'\n   *  We can use the above features to remove keys with empty values in Form\n   *  But we cannot use JSON.stringify() directly, because if the input parameter of JSON.stringify includes fiberNode, it will cause an TypeError: 'Converting circular structure to JSON'\n   *  So we have to mock it's behavior, also, the form value cannot have Symbol or function type, it can be ignored\n   */\n  if (!_isObject(target)) {\n    return false;\n  } else {\n    const valuesOfTarget = _values(target); // values(a)  ->   []\n    // values(b)  ->   [undefined]\n\n\n    if (!valuesOfTarget.length) {\n      return true; // like target: {}\n    } else {\n      return valuesOfTarget.every(item => typeof item === 'undefined');\n    }\n  }\n}\n\nfunction cleanup(obj, path) {\n  let pull = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n  if (path.length === 0) {\n    return;\n  }\n\n  const target = _get(obj, path); // remove undefined from array\n  // if (Array.isArray(target) && pull) {\n  //     // only remove undefined form array from right to left\n  //     // Remove undefined from right to left\n  //     let lastIndex = findLastIndex(target, item => !isUndefined(item));\n  //     lodashRemove(target, (value, index, array) => index > lastIndex);\n  // }\n  // Delete object if its empty\n  // eslint-disable-next-line\n\n\n  if (Array.isArray(target) && target.every(e => e == null)) {\n    _unset(obj, path);\n  } else if (isEmptyObject(target)) {\n    _unset(obj, path);\n  } // Recur\n\n\n  cleanup(obj, path.slice(0, path.length - 1), pull);\n}\n\nexport function empty(object) {\n  return _values(object).length === 0;\n}\nexport function get(object, path) {\n  return _get(object, path);\n}\nexport function remove(object, path) {\n  _unset(object, path); // a.b => [a, b]\n  // arr[11].a => [arr, 11, a]\n\n\n  let pathArray = _toPath(path);\n\n  pathArray = pathArray.slice(0, pathArray.length - 1);\n  cleanup(object, pathArray, false);\n}\nexport function set(object, path, value, allowEmpty) {\n  if (allowEmpty) {\n    return _set(object, path, value);\n  }\n\n  if (value !== undefined) {\n    return _set(object, path, value);\n  } else {\n    // If the path is to an array leaf then we want to set to undefined\n    // 将数组的叶子节点置为undefined时，例如 a.b[0]  a.b[1]  a.b[99]\n    if (pathToArrayElem(path) && get(object, path) !== undefined) {\n      _set(object, path, undefined);\n\n      let pathArray = _toPath(path);\n\n      pathArray = pathArray.slice(0, pathArray.length - 1);\n      cleanup(object, pathArray, false);\n    } else if (!pathToArrayElem(path) && get(object, path) !== undefined) {\n      // Only delete the field if it needs to be deleted and its not a path to an array ( array leaf )\n      // eg:\n\n      /*\n          When the non-array leaf node is set to undefined\n          for example: a.b.c\n      */\n      remove(object, path);\n    }\n  }\n}\nexport function has(object, path) {\n  return _has(object, path);\n}\n/**\n * set static properties from `srcObj` to `obj`\n * @param {object|Function} obj\n * @param {object|Function} srcObj\n * @returns {object|Function}\n */\n\nexport function forwardStatics(obj, srcObj) {\n  if (obj && (typeof obj === 'function' || typeof obj === 'object') && srcObj && (typeof srcObj === 'function' || typeof srcObj === 'object')) {\n    Object.entries(srcObj).forEach(_ref => {\n      let [key, value] = _ref;\n      obj[key] = value;\n    });\n  }\n\n  return obj;\n}"],
  "mappings": "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",
  "names": ["has", "_toPath", "_isNumber", "_isObject", "_values", "_get", "_unset", "_set", "_has"]
}
