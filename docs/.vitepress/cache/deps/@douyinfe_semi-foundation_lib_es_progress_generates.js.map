{
  "version": 3,
  "sources": ["../../../../node_modules/.pnpm/@douyinfe+semi-foundation@2.34.0/node_modules/@douyinfe/semi-foundation/lib/es/progress/generates.js"],
  "sourcesContent": ["import { strings } from './constants';\n\nfunction generateColor(s, percent, gradient) {\n  try {\n    const gradientColorArr = generate(s, percent, gradient);\n    if (gradientColorArr.length !== 0) return gradientColorArr;\n  } catch (e) {\n    return undefined;\n  }\n\n  return undefined;\n}\n\nfunction generate(s, percent, gradient) {\n  s.sort((a, b) => a.percent - b.percent);\n\n  if (s[0].percent > percent) {\n    return strings.STROKE_DEFAULT;\n  }\n\n  const endS = s[s.length - 1];\n\n  if (endS.percent < percent) {\n    return formatToHex(endS.color);\n  }\n\n  for (const [index, item] of s.entries()) {\n    if (item.percent === percent) {\n      return formatToHex(item.color);\n    }\n\n    if (percent > item.percent) continue;\n    const oldItem = s[index - 1];\n\n    if (!gradient) {\n      return formatToHex(oldItem.color);\n    }\n\n    return generateGradients({\n      startColor: formatToHex(oldItem.color),\n      endColor: formatToHex(item.color),\n      size: item.percent - oldItem.percent - 1\n    }, percent - oldItem.percent - 1);\n  }\n\n  return undefined;\n}\n\nfunction generateGradients(g, index) {\n  const {\n    startColor,\n    endColor,\n    size\n  } = g;\n  const sA = startColor.split('');\n  const eA = endColor.split('');\n  const rC = [parseInt(`${sA[1]}${sA[2]}`, 16), parseInt(`${eA[1]}${eA[2]}`, 16)];\n  const gC = [parseInt(`${sA[3]}${sA[4]}`, 16), parseInt(`${eA[3]}${eA[4]}`, 16)];\n  const bC = [parseInt(`${sA[5]}${sA[6]}`, 16), parseInt(`${eA[5]}${eA[6]}`, 16)];\n  const aC = [parseInt(`${sA[7]}${sA[8]}`, 16), parseInt(`${eA[7]}${eA[8]}`, 16)];\n  const rStep = (rC[0] - rC[1]) / (size + 1);\n  const gStep = (gC[0] - gC[1]) / (size + 1);\n  const bStep = (bC[0] - bC[1]) / (size + 1);\n  const aStep = (aC[0] - aC[1]) / (size + 1);\n\n  function tHex(i) {\n    const rS = Math.round(rC[0] - rStep * (i + 1)).toString(16);\n    const gS = Math.round(gC[0] - gStep * (i + 1)).toString(16);\n    const bS = Math.round(bC[0] - bStep * (i + 1)).toString(16);\n    const h = `${padTwo(rS)}${padTwo(gS)}${padTwo(bS)}`;\n    const t = Math.floor(aStep * (i + 1) + aC[1]).toString(16);\n    return toHex.Hex(`#${h}`, t);\n  }\n\n  function padTwo(s) {\n    if (s.length === 1) {\n      return `0${s}`;\n    }\n\n    if (s.length === 0) {\n      return '00';\n    }\n\n    return s;\n  }\n\n  if (typeof index === 'undefined') {\n    const gradientColorArr = [startColor];\n\n    for (let i = 0; i < size; i += 1) {\n      gradientColorArr.push(tHex(i));\n    }\n\n    return gradientColorArr;\n  }\n\n  return tHex(index);\n} // Resolve the colour type contained within `ColorType` to Hex\n\n\nfunction formatToHex(color) {\n  color = color.trim().toLowerCase(); // Hex\n\n  if (REG_S.hex.test(color)) {\n    return toHex.Hex(color, undefined);\n  } // Hsl or Hsla\n\n\n  if (REG_S.hslA.test(color)) {\n    return toHex.Hex(toHex.HslA(color), undefined);\n  } // Rgb or Rgba\n\n\n  if (REG_S.rgbA.test(color)) {\n    return toHex.Hex(toHex.RgbA(color), undefined);\n  } // Semi Design Tokens\n\n\n  if (REG_S.semiDesignTokens.test(color)) {\n    if (SEMI_DESIGN_TOKENS.ALONG.indexOf(color) !== -1) {\n      return toHex.SemiDesignToken(color);\n    }\n\n    if (SEMI_DESIGN_TOKENS.SEQUENCE.indexOf(color) !== -1) {\n      return toHex.SemiDesignToken(`${color}-5`);\n    }\n\n    return toHex.SemiDesignToken(`${color}`);\n  }\n\n  return undefined;\n}\n\nconst toHex = {\n  Hex(color, transparency) {\n    color = color.replace('#', '');\n    if (color.length === 8) return `#${color}`;\n    if (color.length === 6) return `#${color}${transparency || 'ff'}`;\n\n    if (color.length === 3) {\n      color = color.split('').map(c => c + c).join('');\n    }\n\n    return `#${color}${transparency || 'ff'}`;\n  },\n\n  SemiDesignToken(color) {\n    // ! Only produces effects when used, the conditions for running need to occur after the real DOM is rendered\n    if (typeof window === 'undefined') {\n      return undefined;\n    }\n\n    const variable = getComputedStyle(document.body).getPropertyValue(`--semi-${color}`);\n    if (variable === '') return undefined;\n    const rgba = `rgba(${variable}, 1)`;\n    return toHex.RgbA(rgba);\n  },\n\n  HslA(color) {\n    const hsla = REG_S.hslA.exec(color);\n    const h = parseInt(hsla[2]);\n    const s = parseInt(hsla[3]) / 100;\n    const l = parseInt(hsla[4]) / 100;\n    const a = hsla[5];\n    const c = (1 - Math.abs(2 * l - 1)) * s,\n          x = c * (1 - Math.abs(h / 60 % 2 - 1)),\n          m = l - c / 2;\n    let r = 0,\n        g = 0,\n        b = 0;\n\n    if (0 <= h && h < 60) {\n      r = c;\n      g = x;\n      b = 0;\n    } else if (60 <= h && h < 120) {\n      r = x;\n      g = c;\n      b = 0;\n    } else if (120 <= h && h < 180) {\n      r = 0;\n      g = c;\n      b = x;\n    } else if (180 <= h && h < 240) {\n      r = 0;\n      g = x;\n      b = c;\n    } else if (240 <= h && h < 300) {\n      r = x;\n      g = 0;\n      b = c;\n    } else if (300 <= h && h < 360) {\n      r = c;\n      g = 0;\n      b = x;\n    }\n\n    r = Math.round((r + m) * 255).toString(16);\n    g = Math.round((g + m) * 255).toString(16);\n    b = Math.round((b + m) * 255).toString(16);\n    return toHex.utils.pAL(r, g, b, a);\n  },\n\n  RgbA(color) {\n    const rgba = REG_S.rgbA.exec(color);\n    const r = parseInt(rgba[2], 10).toString(16),\n          g = parseInt(rgba[3], 10).toString(16),\n          b = parseInt(rgba[4], 10).toString(16),\n          a = rgba[5];\n    return toHex.utils.pAL(r, g, b, a);\n  },\n\n  utils: {\n    pAL(r, g, b, a) {\n      if (r.length == 1) r = '0' + r;\n      if (g.length == 1) g = '0' + g;\n      if (b.length == 1) b = '0' + b;\n\n      if (typeof a !== 'undefined') {\n        a = Math.round(parseInt(a) * 255).toString(16);\n        if (a.length == 1) a = '0' + a;\n        return '#' + r + g + b + a;\n      }\n\n      return '#' + r + g + b;\n    }\n\n  }\n};\nconst REG_S = {\n  hex: /^#([0-9a-fA-F]{3}|[0-9a-fA-F]{6}|[0-9a-fA-F]{8})$/,\n  hslA: /(hsl)a?\\(\\s*?(\\d+),?\\s*?(\\d+)%,?\\s*?(\\d+)%,?\\s*?\\/?(\\s*?[\\d.]+)?\\s*?\\)/,\n  rgbA: /(rgb)a?\\(\\s*?(\\d+),?\\s*?(\\d+),?\\s*?(\\d+),?\\s*?\\/?(\\s*?[\\d.]+)?\\s*?\\)/,\n  semiDesignTokens: /(\\w+)?-?(\\w+)-?(\\d)?/\n}; // From src/components/palette.js\n\nconst SEMI_DESIGN_TOKENS = {\n  // No sequence\n  ALONG: [\"black\", \"white\"],\n  // Sequence: 0-9\n  SEQUENCE: [\"amber\", \"blue\", \"cyan\", \"green\", \"grey\", \"indigo\", \"light-blue\", \"light-green\", \"lime\", \"orange\", \"pink\", \"purple\", \"red\", \"teal\", \"violet\", \"yellow\"]\n};\nexport { generateColor };"],
  "mappings": "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",
  "names": []
}
