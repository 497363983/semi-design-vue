{
  "version": 3,
  "sources": ["../../../../node_modules/.pnpm/@douyinfe+semi-foundation@2.34.0/node_modules/@douyinfe/semi-foundation/lib/es/upload/foundation.js"],
  "sourcesContent": ["var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport BaseFoundation from '../base/foundation';\nimport isPromise from '../utils/isPromise';\nimport { getUuidv4 } from '../utils/uuid';\nimport { strings, numbers } from './constants';\nimport { getFileSize, byteKB, endsWith, mapFileTree } from './utils';\nconst {\n  FILE_STATUS_UPLOADING,\n  FILE_STATUS_SUCCESS,\n  FILE_STATUS_UPLOAD_FAIL,\n  FILE_STATUS_VALID_FAIL,\n  FILE_STATUS_WAIT_UPLOAD,\n  DRAG_AREA_DEFAULT,\n  DRAG_AREA_LEGAL,\n  TRIGGER_AUTO\n} = strings;\n\nclass UploadFoundation extends BaseFoundation {\n  constructor(adapter) {\n    super(Object.assign({}, adapter));\n  }\n\n  destroy() {\n    this.releaseMemory();\n  }\n\n  getError(_ref) {\n    let {\n      action,\n      xhr,\n      message,\n      fileName\n    } = _ref;\n    const status = xhr ? xhr.status : 0;\n    const msg = message || `cannot post ${fileName} to ${action}, xhr status: ${status}'`;\n    const err = new Error(msg);\n    err.status = status;\n    err.method = 'post';\n    err.url = action;\n    return err;\n  }\n\n  getBody(xhr) {\n    if (!xhr) {\n      return;\n    }\n\n    const text = xhr.responseText || xhr.response;\n\n    if (!text) {\n      return text;\n    }\n\n    try {\n      return JSON.parse(text);\n    } catch (error) {\n      return text;\n    }\n  }\n\n  checkFileSize(file) {\n    const {\n      size\n    } = file;\n    const {\n      maxSize,\n      minSize\n    } = this.getProps();\n    let isIllegal = false;\n\n    if (size > maxSize * byteKB || size < minSize * byteKB) {\n      isIllegal = true;\n    }\n\n    return isIllegal;\n  }\n  /**\n   * 1. 选择文件\n   * 2. transform转换. 添加uid\n   * 3. 检查文件个数是否超出\n   *   若超出，不添加到list中，触发onExceed，中止流程\n   *   若未超出，执行以下流程\n   * 4. 检查文件尺寸，添加尺寸是否合法的标识\n   * 5. 检查uploadTrigger是否为'auto'，若是执行步骤6-8\n   * 6. 遍历文件列表触发上传\n   *    - 对尺寸不合适的不需要触发上传\n   * 7. beforeUpload\n   *    - 对beforeUpload中设为不合法的不需要触发上传\n   * 8. TODO: check\n   * 9. afterUpload\n   *\n   * 1. Select file\n   * 2. transform, add uid\n   * 3. Check whether the number of files exceeds\n   *   If it exceeds, it is not added to the list, trigger onExceed, and abort the process\n   *   If it is not exceeded, execute the following process\n   * 4. check the file size, add the size is legal logo\n   * 5. Check whether the uploadTrigger is'auto ', if so, perform steps 6-8\n   * 6. Traversing the file list triggers upload\n   *    - No need to trigger uploads for inappropriate sizes\n   * 7. beforeUpload\n   *    - no need to trigger upload if beforeUpload is not set to be valid\n   * 8. TODO: check\n   * 9. afterUpload\n   */\n\n\n  handleChange(currentFileList) {\n    const invalidFiles = [];\n    const {\n      limit,\n      transformFile,\n      accept\n    } = this.getProps();\n    const {\n      fileList\n    } = this.getStates();\n    let files = Array.from(currentFileList); // When the selected file\n\n    if (typeof accept !== 'undefined') {\n      files = files.filter(item => {\n        const isValid = this.checkFileFormat(accept, item);\n\n        if (!isValid) {\n          invalidFiles.push(item);\n        }\n\n        return isValid;\n      });\n\n      if (invalidFiles.length !== 0) {\n        this._adapter.notifyAcceptInvalid(invalidFiles);\n      }\n\n      if (files.length === 0) {\n        return;\n      }\n    }\n\n    files = files.map(file => {\n      if (transformFile) {\n        file = transformFile(file);\n      }\n\n      if (!file.uid) {\n        file.uid = getUuidv4();\n      }\n\n      if (this.checkFileSize(file)) {\n        file._sizeInvalid = true;\n        file.status = FILE_STATUS_VALID_FAIL;\n\n        this._adapter.notifySizeError(file, fileList);\n      }\n\n      return file;\n    });\n    const total = fileList.length + files.length;\n\n    if (typeof limit !== 'undefined') {\n      // Determine whether the limit is exceeded\n      if (total > limit) {\n        this._adapter.notifyExceed(files);\n\n        if (limit === 1) {\n          // Replace the current file with the last file\n          files = files.slice(-1);\n\n          this._adapter.notifyFileSelect(files);\n\n          this._adapter.resetInput();\n\n          this.replaceFileList(files);\n          return;\n        } // If the limit is exceeded, the calculation can add a few more files and continue uploading the remaining files\n\n\n        const restNum = limit - fileList.length;\n        files = files.slice(0, restNum);\n      }\n    }\n\n    this._adapter.notifyFileSelect(files);\n\n    this._adapter.resetInput();\n\n    this.addFilesToList(files);\n  } // Triggered when replacing a single file\n\n\n  handleReplaceChange(currentFileList) {\n    if (currentFileList.length === 0) {\n      return;\n    }\n\n    const {\n      transformFile,\n      uploadTrigger,\n      accept\n    } = this.getProps();\n    const {\n      replaceIdx,\n      fileList\n    } = this.getStates();\n    let newFile = Array.from(currentFileList).pop();\n\n    if (typeof accept !== 'undefined') {\n      if (!this.checkFileFormat(accept, newFile)) {\n        this._adapter.notifyAcceptInvalid([newFile]);\n\n        return;\n      }\n    }\n\n    if (transformFile) {\n      newFile = transformFile(newFile);\n    }\n\n    if (!newFile.uid) {\n      newFile.uid = getUuidv4();\n    }\n\n    if (this.checkFileSize(newFile)) {\n      newFile._sizeInvalid = true;\n      newFile.status = FILE_STATUS_VALID_FAIL;\n\n      this._adapter.notifySizeError(newFile, fileList);\n    }\n\n    this._adapter.notifyFileSelect([newFile]);\n\n    const newFileItem = this.buildFileItem(newFile, uploadTrigger);\n    const newFileList = [...fileList];\n    newFileList.splice(replaceIdx, 1, newFileItem);\n\n    this._adapter.notifyChange({\n      currentFile: newFileItem,\n      fileList: newFileList\n    });\n\n    this._adapter.updateFileList(newFileList, () => {\n      this._adapter.resetReplaceInput();\n\n      this.upload(newFileItem);\n    });\n  }\n\n  buildFileItem(fileInstance, uploadTrigger) {\n    const {\n      _sizeInvalid,\n      status\n    } = fileInstance;\n\n    try {\n      // can't use ... to get rest property on File Object\n      delete fileInstance._sizeInvalid;\n      delete fileInstance.status;\n    } catch (error) {}\n\n    const _file = {\n      status: status ? status : uploadTrigger === TRIGGER_AUTO ? FILE_STATUS_UPLOADING : FILE_STATUS_WAIT_UPLOAD,\n      name: fileInstance.name,\n      size: getFileSize(fileInstance.size),\n      uid: fileInstance.uid,\n      percent: 0,\n      fileInstance,\n      url: this._createURL(fileInstance)\n    };\n\n    if (_sizeInvalid) {\n      _file._sizeInvalid = true;\n    } // If it is an image, preview; if it is a pdf, you can jump to\n\n\n    if (this.isImage(fileInstance)) {\n      _file.preview = true;\n    }\n\n    return _file;\n  }\n\n  replaceFileList(files) {\n    const {\n      uploadTrigger\n    } = this.getProps();\n    const currentFiles = files.map(item => this.buildFileItem(item, uploadTrigger));\n\n    this._adapter.notifyChange({\n      fileList: currentFiles,\n      currentFile: currentFiles[0]\n    });\n\n    this._adapter.updateFileList(currentFiles, () => {\n      if (uploadTrigger === TRIGGER_AUTO) {\n        this.startUpload(currentFiles);\n      }\n    });\n  }\n\n  addFilesToList(files) {\n    const fileList = this.getState('fileList').slice();\n    const {\n      uploadTrigger\n    } = this.getProps();\n    const currentFiles = files.map(item => this.buildFileItem(item, uploadTrigger));\n    currentFiles.forEach(file => {\n      const index = fileList.findIndex(item => item.uid === file.uid);\n\n      if (index !== -1) {\n        fileList[index] = file;\n      } else {\n        fileList.push(file);\n\n        this._adapter.notifyChange({\n          fileList,\n          currentFile: file\n        });\n      }\n    });\n\n    this._adapter.updateFileList(fileList, () => {\n      if (uploadTrigger === TRIGGER_AUTO) {\n        this.startUpload(currentFiles);\n      }\n    });\n  } // 插入多个文件到指定位置\n  // Insert files to the specified location\n\n\n  insertFileToList(files, index) {\n    const {\n      limit,\n      transformFile,\n      accept,\n      uploadTrigger\n    } = this.getProps();\n    const {\n      fileList\n    } = this.getStates();\n    const unAcceptFileList = []; // 当次选中的文件\n    // current selected file\n\n    let currentFileList = Array.from(files);\n\n    if (typeof accept !== 'undefined') {\n      currentFileList = currentFileList.filter(item => {\n        const isValid = this.checkFileFormat(accept, item);\n\n        if (!isValid) {\n          unAcceptFileList.push(item);\n        }\n\n        return isValid;\n      });\n\n      if (unAcceptFileList.length !== 0) {\n        this._adapter.notifyAcceptInvalid(unAcceptFileList);\n      }\n\n      if (currentFileList.length === 0) {\n        return;\n      }\n    }\n\n    currentFileList = currentFileList.map(file => {\n      if (!file.uid) {\n        file.uid = getUuidv4();\n      }\n\n      if (this.checkFileSize(file)) {\n        file._sizeInvalid = true;\n        file.status = FILE_STATUS_VALID_FAIL;\n\n        this._adapter.notifySizeError(file, fileList);\n      }\n\n      if (transformFile) {\n        file = transformFile(file);\n      }\n\n      return file;\n    });\n    const total = fileList.length + currentFileList.length;\n\n    if (typeof limit !== 'undefined') {\n      // 判断是否超出限制\n      // Determine whether the limit is exceeded\n      if (total > limit) {\n        if (limit === 1) {\n          // 使用最后面的文件对当前文件进行替换\n          // Use the last file to replace the current file\n          currentFileList = currentFileList.slice(-1);\n\n          this._adapter.notifyFileSelect(currentFileList);\n\n          this._adapter.resetInput();\n\n          this.replaceFileList(currentFileList);\n          return;\n        } // 如果超出了限制，则计算还能添加几个文件，将剩余的文件继续上传\n        // If the limit is exceeded, several files can be added to the calculation, and the remaining files will continue to be uploaded\n\n\n        const restNum = limit - fileList.length;\n        currentFileList = currentFileList.slice(0, restNum);\n\n        this._adapter.notifyExceed(currentFileList);\n      }\n    }\n\n    const fileItemList = currentFileList.map(file => this.buildFileItem(file, uploadTrigger));\n    const newFileList = fileList.slice();\n\n    if (typeof index !== 'undefined') {\n      newFileList.splice(index, 0, ...fileItemList);\n    } else {\n      newFileList.push(...fileItemList);\n    }\n\n    this._adapter.notifyFileSelect(currentFileList);\n\n    this._adapter.notifyChange({\n      fileList: newFileList,\n      currentFile: null\n    });\n\n    this._adapter.updateFileList(newFileList, () => {\n      if (uploadTrigger === TRIGGER_AUTO) {\n        this.startUpload(fileItemList);\n      }\n    });\n  }\n  /* istanbul ignore next */\n\n\n  manualUpload() {\n    // find the list of files that have not been uploaded\n    const waitToUploadFileList = this.getState('fileList').filter(item => item.status === FILE_STATUS_WAIT_UPLOAD);\n    this.startUpload(waitToUploadFileList);\n  }\n\n  startUpload(fileList) {\n    fileList.forEach(file => {\n      if (!file._sizeInvalid) {\n        this.upload(file);\n      }\n    });\n  }\n\n  upload(file) {\n    const {\n      beforeUpload\n    } = this.getProps();\n\n    if (typeof beforeUpload === 'undefined') {\n      this.post(file);\n      return;\n    }\n\n    if (typeof beforeUpload === 'function') {\n      const {\n        fileList\n      } = this.getStates();\n\n      const buResult = this._adapter.notifyBeforeUpload({\n        file,\n        fileList\n      });\n\n      switch (true) {\n        // sync validate - boolean\n        case buResult === true:\n          {\n            this.post(file);\n            break;\n          }\n\n        case buResult === false:\n          {\n            const newResult = {\n              shouldUpload: false,\n              status: strings.FILE_STATUS_VALID_FAIL\n            };\n            this.handleBeforeUploadResultInObject(newResult, file);\n            break;\n          }\n        // async validate\n\n        case buResult && isPromise(buResult):\n          {\n            Promise.resolve(buResult).then(resolveData => {\n              let newResult = {\n                shouldUpload: true\n              };\n              const typeOfResolveData = Object.prototype.toString.call(resolveData).slice(8, -1);\n\n              if (typeOfResolveData === 'Object') {\n                newResult = Object.assign(Object.assign({}, newResult), resolveData);\n              }\n\n              this.handleBeforeUploadResultInObject(newResult, file);\n            }, rejectVal => {\n              let newResult = {\n                shouldUpload: false,\n                status: strings.FILE_STATUS_VALID_FAIL\n              };\n              const typeOfRejectData = Object.prototype.toString.call(rejectVal).slice(8, -1);\n\n              if (typeOfRejectData === 'Object') {\n                newResult = Object.assign(Object.assign({}, newResult), rejectVal);\n              }\n\n              this.handleBeforeUploadResultInObject(newResult, file);\n            });\n            break;\n          }\n        // sync validate - object\n\n        case typeof buResult === 'object':\n          // inject to fileList\n          this.handleBeforeUploadResultInObject(buResult, file);\n          break;\n\n        default:\n          break;\n      }\n    }\n  } // handle beforeUpload result when it's an object\n\n\n  handleBeforeUploadResultInObject(buResult, file) {\n    const {\n      shouldUpload,\n      status,\n      autoRemove,\n      validateMessage,\n      fileInstance\n    } = buResult;\n    let newFileList = this.getState('fileList').slice();\n\n    if (autoRemove) {\n      newFileList = newFileList.filter(item => item.uid !== file.uid);\n    } else {\n      const index = this._getFileIndex(file, newFileList);\n\n      if (index < 0) {\n        return;\n      }\n\n      status ? newFileList[index].status = status : null;\n      validateMessage ? newFileList[index].validateMessage = validateMessage : null;\n\n      if (fileInstance) {\n        fileInstance.uid = file.uid; // reuse recent file uid\n\n        newFileList[index].fileInstance = fileInstance;\n        newFileList[index].size = getFileSize(fileInstance.size);\n        newFileList[index].name = fileInstance.name;\n      }\n\n      newFileList[index].shouldUpload = shouldUpload;\n    }\n\n    this._adapter.updateFileList(newFileList);\n\n    this._adapter.notifyChange({\n      fileList: newFileList,\n      currentFile: file\n    });\n\n    if (shouldUpload) {\n      this.post(file);\n    }\n  }\n\n  post(file) {\n    const {\n      fileInstance\n    } = file;\n    const option = this.getProps();\n\n    if (typeof XMLHttpRequest === 'undefined') {\n      return;\n    }\n\n    const xhr = new XMLHttpRequest();\n    const formData = new FormData();\n    const {\n      action\n    } = option; // add data\n\n    let {\n      data\n    } = option;\n\n    if (data) {\n      if (typeof data === 'function') {\n        data = data(fileInstance);\n      }\n\n      Object.keys(data).forEach(key => {\n        formData.append(key, data[key]);\n      });\n    } // add file\n\n\n    const fileName = option.name || option.fileName || fileInstance.name;\n\n    if (option.customRequest) {\n      return option.customRequest({\n        fileName,\n        data,\n        file,\n        fileInstance,\n        onProgress: e => this.handleProgress({\n          e,\n          fileInstance\n        }),\n        onError: (userXhr, e) => this.handleError({\n          e,\n          xhr: userXhr,\n          fileInstance\n        }),\n        onSuccess: (response, e) => this.handleSuccess({\n          response,\n          fileInstance,\n          e,\n          isCustomRequest: true\n        }),\n        withCredentials: option.withCredentials,\n        action: option.action\n      });\n    }\n\n    formData.append(fileName, fileInstance);\n    xhr.open('post', action, true);\n\n    if (option.withCredentials && 'withCredentials' in xhr) {\n      xhr.withCredentials = true;\n    }\n\n    if (xhr.upload) {\n      xhr.upload.onprogress = e => this.handleProgress({\n        e,\n        fileInstance\n      });\n    } // Callback function after upload is completed\n\n\n    xhr.onload = e => this.handleOnLoad({\n      e,\n      xhr,\n      fileInstance\n    });\n\n    xhr.onerror = e => this.handleError({\n      e,\n      xhr,\n      fileInstance\n    }); // add headers\n\n\n    let headers = option.headers || {};\n\n    if (typeof headers === 'function') {\n      headers = headers(fileInstance);\n    }\n\n    for (const item in headers) {\n      if (Object.prototype.hasOwnProperty.call(headers, item) && headers[item] !== null) {\n        xhr.setRequestHeader(item, headers[item]);\n      }\n    }\n\n    xhr.send(formData);\n  }\n\n  handleProgress(_ref2) {\n    let {\n      e,\n      fileInstance\n    } = _ref2;\n    const {\n      fileList\n    } = this.getStates();\n    const newFileList = fileList.slice();\n    let percent = 0;\n\n    if (e.total > 0) {\n      percent = Number((e.loaded / e.total * 100 * numbers.PROGRESS_COEFFICIENT).toFixed(0)) || 0;\n    }\n\n    const index = this._getFileIndex(fileInstance, newFileList);\n\n    if (index < 0) {\n      return;\n    }\n\n    newFileList[index].percent = percent;\n    newFileList[index].status = FILE_STATUS_UPLOADING;\n\n    this._adapter.notifyProgress(percent, fileInstance, newFileList);\n\n    this._adapter.updateFileList(newFileList);\n\n    this._adapter.notifyChange({\n      fileList: newFileList,\n      currentFile: newFileList[index]\n    });\n  }\n\n  handleOnLoad(_ref3) {\n    let {\n      e,\n      xhr,\n      fileInstance\n    } = _ref3;\n    const {\n      fileList\n    } = this.getStates();\n\n    const index = this._getFileIndex(fileInstance, fileList);\n\n    if (index < 0) {\n      return;\n    }\n\n    if (xhr.status < 200 || xhr.status >= 300) {\n      this.handleError({\n        e,\n        xhr,\n        fileInstance\n      });\n    } else {\n      this.handleSuccess({\n        e,\n        xhr,\n        fileInstance,\n        index\n      });\n    }\n  }\n\n  handleSuccess(_ref4) {\n    let {\n      e,\n      fileInstance,\n      isCustomRequest = false,\n      xhr,\n      response\n    } = _ref4;\n    const {\n      fileList\n    } = this.getStates();\n    let body = null;\n\n    const index = this._getFileIndex(fileInstance, fileList);\n\n    if (index < 0) {\n      return;\n    }\n\n    if (isCustomRequest) {\n      // use when pass customRequest\n      body = response;\n    } else {\n      body = this.getBody(xhr);\n    }\n\n    const newFileList = fileList.slice();\n    const {\n      afterUpload\n    } = this.getProps();\n    newFileList[index].status = FILE_STATUS_SUCCESS;\n    newFileList[index].percent = 100;\n\n    this._adapter.notifyProgress(100, fileInstance, newFileList);\n\n    newFileList[index].response = body;\n    e ? newFileList[index].event = e : null;\n\n    if (afterUpload && typeof afterUpload === 'function') {\n      const {\n        autoRemove,\n        status,\n        validateMessage,\n        name\n      } = this._adapter.notifyAfterUpload({\n        response: body,\n        file: newFileList[index],\n        fileList: newFileList\n      }) || {};\n      status ? newFileList[index].status = status : null;\n      validateMessage ? newFileList[index].validateMessage = validateMessage : null;\n      name ? newFileList[index].name = name : null;\n      autoRemove ? newFileList.splice(index, 1) : null;\n    }\n\n    this._adapter.notifySuccess(body, fileInstance, newFileList);\n\n    this._adapter.notifyChange({\n      fileList: newFileList,\n      currentFile: newFileList[index]\n    });\n\n    this._adapter.updateFileList(newFileList);\n  }\n\n  _getFileIndex(file, fileList) {\n    return fileList.findIndex(item => item.uid === file.uid);\n  }\n\n  handleRemove(file) {\n    const {\n      disabled\n    } = this.getProps();\n\n    if (disabled) {\n      return;\n    }\n\n    const {\n      fileList\n    } = this.getStates();\n    Promise.resolve(this._adapter.notifyBeforeRemove(file, fileList)).then(res => {\n      // prevent remove while user return false\n      if (res === false) {\n        return;\n      }\n\n      const newFileList = fileList.slice();\n\n      const index = this._getFileIndex(file, fileList);\n\n      if (index < 0) {\n        return;\n      }\n\n      newFileList.splice(index, 1);\n\n      this._adapter.notifyRemove(file.fileInstance, newFileList, file);\n\n      this._adapter.updateFileList(newFileList);\n\n      this._adapter.notifyChange({\n        fileList: newFileList,\n        currentFile: file\n      });\n    });\n  }\n\n  handleError(_ref5) {\n    let {\n      e,\n      xhr,\n      fileInstance\n    } = _ref5;\n    const {\n      fileList\n    } = this.getStates();\n\n    const index = this._getFileIndex(fileInstance, fileList);\n\n    if (index < 0) {\n      return;\n    }\n\n    const {\n      action\n    } = this.getProps();\n    const newFileList = fileList.slice();\n    const error = this.getError({\n      action,\n      xhr,\n      fileName: fileInstance.name\n    });\n    newFileList[index].status = FILE_STATUS_UPLOAD_FAIL;\n    newFileList[index].response = error;\n    newFileList[index].event = e;\n\n    this._adapter.notifyError(error, fileInstance, newFileList, xhr);\n\n    this._adapter.updateFileList(newFileList);\n\n    this._adapter.notifyChange({\n      currentFile: newFileList[index],\n      fileList: newFileList\n    });\n  }\n\n  handleClear() {\n    const {\n      disabled\n    } = this.getProps();\n    const {\n      fileList\n    } = this.getStates();\n\n    if (disabled) {\n      return;\n    }\n\n    Promise.resolve(this._adapter.notifyBeforeClear(fileList)).then(res => {\n      if (res === false) {\n        return;\n      }\n\n      this._adapter.updateFileList([]);\n\n      this._adapter.notifyClear();\n\n      this._adapter.notifyChange({\n        fileList: []\n      });\n    }).catch(error => {// if user pass reject promise, no need to do anything\n    });\n  }\n\n  _createURL(fileInstance) {\n    // https://stackoverflow.com/questions/31742072/filereader-vs-window-url-createobjecturl\n    const url = URL.createObjectURL(fileInstance);\n    const {\n      localUrls\n    } = this.getStates();\n    const newUrls = localUrls.slice();\n    newUrls.push(url);\n\n    this._adapter.updateLocalUrls(newUrls);\n\n    return url;\n  } // 释放预览文件所占用的内存\n  // Release memory used by preview files\n\n\n  releaseMemory() {\n    const {\n      localUrls\n    } = this.getStates();\n    localUrls.forEach(url => {\n      this._releaseBlob(url);\n    });\n  }\n\n  _releaseBlob(url) {\n    try {\n      URL.revokeObjectURL(url);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  isImage(file) {\n    return /(webp|svg|png|gif|jpg|jpeg|bmp|dpg)$/i.test(file.type);\n  }\n  /* istanbul ignore next */\n\n\n  isMultiple() {\n    return Boolean(this.getProp('multiple'));\n  }\n\n  handleDragEnter(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this._dragEnterTarget = e.currentTarget;\n    const {\n      disabled\n    } = this.getProps();\n\n    if (!disabled) {\n      this._adapter.updateDragAreaStatus(DRAG_AREA_LEGAL);\n    }\n  }\n\n  handleDirectoryDrop(e) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const fileList = this.getState('fileList').slice();\n      const items = [].slice.call(e.dataTransfer.items);\n      const files = yield mapFileTree(items);\n      this.handleChange(files);\n\n      this._adapter.updateDragAreaStatus(DRAG_AREA_DEFAULT);\n\n      this._adapter.notifyDrop(e, files, fileList);\n    });\n  }\n\n  handleDrop(e) {\n    // Block file opening in browser\n    e.preventDefault();\n    e.stopPropagation();\n    const {\n      disabled,\n      directory\n    } = this.getProps();\n    const fileList = this.getState('fileList').slice();\n\n    if (!disabled) {\n      if (directory) {\n        this.handleDirectoryDrop(e);\n        return;\n      }\n\n      const files = Array.from(e.dataTransfer.files);\n      this.handleChange(files);\n\n      this._adapter.updateDragAreaStatus(DRAG_AREA_DEFAULT);\n\n      this._adapter.notifyDrop(e, files, fileList);\n    }\n  }\n\n  handleDragOver(e) {\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  handleDragLeave(e) {\n    e.preventDefault();\n    e.stopPropagation(); // 防止拖拽进入子元素时触发的dragLeave也被处理\n    // Prevent dragLeave triggered when dragging into a child element is also handled\n    // https://stackoverflow.com/questions/7110353/html5-dragleave-fired-when-hovering-a-child-element\n\n    if (this._dragEnterTarget === e.target) {\n      this._adapter.updateDragAreaStatus(DRAG_AREA_DEFAULT);\n    }\n  } // 拖拽上传时，需要对文件的格式进行校验\n  // When dragging and uploading, you need to verify the file format\n\n\n  checkFileFormat(accept, file) {\n    const acceptTypes = accept.split(',').map(type => type.trim()).filter(type => type);\n    const mimeType = file.type || ''; // Get the large class to which MIMEtype belongs, eg: image/jpeg = > image, application/= > application\n\n    const baseMimeType = mimeType.replace(/\\/.*$/, '');\n    return acceptTypes.some(type => {\n      // When accepted as a suffix filename such as [.jpeg]\n      if (type.charAt(0) === '.') {\n        const fileName = file.name || '';\n        const acceptExtension = type.split('.').pop().toLowerCase();\n        return endsWith(fileName.toLowerCase(), acceptExtension);\n      } // When accepted as a general class such as [image/*] or [video/*]\n\n\n      if (/\\/\\*$/.test(type)) {\n        const acceptBaseMimeType = type.replace(/\\/.*$/, '');\n        return baseMimeType === acceptBaseMimeType;\n      } // When accepted as a full MIME types string\n\n\n      if (/^[^\\/]+\\/[^\\/]+$/.test(type)) {\n        return mimeType === type;\n      }\n\n      return false;\n    });\n  }\n\n  retry(fileItem) {\n    const {\n      onRetry\n    } = this.getProps();\n\n    if (onRetry && typeof onRetry === 'function') {\n      onRetry(fileItem);\n    }\n\n    this.post(fileItem);\n  }\n\n  handlePreviewClick(fileItem) {\n    this._adapter.notifyPreviewClick(fileItem);\n  }\n\n}\n\nexport default UploadFoundation;"],
  "mappings": "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",
  "names": ["foundation_default"]
}
