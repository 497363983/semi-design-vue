{
  "version": 3,
  "sources": ["../../../../node_modules/.pnpm/@douyinfe+semi-foundation@2.34.0/node_modules/@douyinfe/semi-foundation/lib/es/anchor/foundation.js"],
  "sourcesContent": ["import _get from \"lodash/get\";\nimport _isArray from \"lodash/isArray\";\nimport BaseFoundation from '../base/foundation';\nimport scrollIntoView from 'scroll-into-view-if-needed';\nimport { cssClasses } from './constants';\nconst prefixCls = cssClasses.PREFIX;\nexport default class AnchorFoundation extends BaseFoundation {\n  constructor(adapter) {\n    var _this;\n\n    super(Object.assign(Object.assign({}, AnchorFoundation.defaultAdapter), adapter));\n    _this = this;\n\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    this.init = () => {}; // eslint-disable-next-line @typescript-eslint/no-empty-function\n\n\n    this.destroy = () => {};\n\n    this.addLink = link => {\n      this._adapter.addLink(link);\n    };\n\n    this.removeLink = link => {\n      this._adapter.removeLink(link);\n    };\n\n    this.setActiveLink = function (link, prevLink) {\n      let shouldNotify = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n      const activeLink = _this._adapter.getState('activeLink');\n\n      const onChange = _this._adapter.getProp('onChange');\n\n      if (activeLink !== link) {\n        _this._adapter.setActiveLink(link, _this._setActiveSlide);\n\n        if (onChange && shouldNotify) {\n          _this._adapter.notifyChange(link, prevLink);\n        }\n      }\n    }; // Adjust rail height according to text link content height\n\n\n    this.setScrollHeight = () => {\n      const anchorWrapper = `.${prefixCls}-link-wrapper`;\n\n      const anchorNode = this._adapter.getAnchorNode(anchorWrapper);\n\n      if (anchorNode) {\n        const scrollHeight = `${anchorNode.scrollHeight}px`;\n\n        this._adapter.setScrollHeight(scrollHeight);\n      }\n    };\n\n    this.updateScrollHeight = (prevState, state) => {\n      const prevLinks = prevState.links.join('');\n      const links = state.links.join('');\n\n      if (prevLinks !== links) {\n        this.setScrollHeight();\n      }\n    };\n\n    this.setChildMap = () => {\n      const children = this._adapter.getProp('children');\n\n      const childMap = {};\n\n      if (_isArray(children)) {\n        for (const link of children) {\n          this._getLinkToMap(link, [], childMap);\n        }\n      } else {\n        this._getLinkToMap(children, [], childMap);\n      }\n\n      this._adapter.setChildMap(childMap);\n    };\n\n    this.updateChildMap = (prevState, state) => {\n      const prevLinks = prevState.links.join('');\n      const links = state.links.join('');\n\n      if (prevLinks !== links) {\n        this.setChildMap();\n      }\n    };\n\n    this.getLinksTop = () => this._adapter.getLinksBoundingTop();\n\n    this.handleScroll = () => {\n      const {\n        clickLink,\n        links,\n        activeLink: prevActiveLink\n      } = this.getStates(); // TODO check this._adapter -> this.\n      // ActiveLink Determined by the clicked link\n\n      if (clickLink) {\n        return;\n      }\n\n      const elTop = this.getLinksTop();\n      let lastNegative = -Infinity;\n      let lastNegativeIndex = -1;\n\n      for (let i = 0; i < elTop.length; i++) {\n        if (elTop[i] < 0 && elTop[i] > lastNegative) {\n          lastNegative = elTop[i];\n          lastNegativeIndex = i;\n        }\n      }\n\n      const activeLink = links[lastNegativeIndex];\n      this.setActiveLink(activeLink, prevActiveLink);\n    };\n\n    this.handleClick = function (e, link) {\n      let shouldNotify = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n      const destNode = _this._adapter.getContentNode(link);\n\n      const prevLink = _this._adapter.getState('activeLink');\n\n      _this.setActiveLink(link, prevLink, shouldNotify);\n\n      if (destNode) {\n        try {\n          _this._adapter.setClickLinkWithCallBack(true, link, _this._scrollIntoView);\n        } catch (error) {}\n      }\n\n      shouldNotify && _this._adapter.notifyClick(e, link);\n    };\n\n    this.handleClickLink = () => {\n      this._adapter.setClickLink(false);\n    }; // Get the child nodes of each link\n\n\n    this._getLinkToMap = (link, parents, linkMap) => {\n      const node = link && link.props;\n\n      if (!node || !node.href) {\n        return;\n      }\n\n      if (!(node.href in linkMap)) {\n        linkMap[node.href] = new Set();\n      } // Every ancestor kept a map\n\n\n      for (const parent of parents) {\n        linkMap[parent].add(node.href);\n      }\n\n      if (node.children && node.children.length) {\n        parents.push(node.href); // Maintain child node map\n\n        for (const child of node.children) {\n          this._getLinkToMap(child, parents, linkMap);\n        }\n\n        parents.pop();\n      }\n    };\n\n    this._scrollIntoView = link => {\n      const {\n        scrollMotion,\n        targetOffset\n      } = this.getProps(); // TODO check this._adapter -> this.\n\n      const behavior = scrollMotion ? 'smooth' : 'auto';\n\n      const canSmoothScroll = this._adapter.canSmoothScroll();\n\n      if (link) {\n        const destNode = this._adapter.getContentNode(link);\n\n        const scrollOpts = {\n          /**\n           * Behavior defines scrolling behavior\n           *  - Optional'auto '|' smooth '| Function\n           *  - Function Custom scrolling behavior\n           *    - Enter parameters as actions, each action contains an element that should be scrolled\n           *    - Actions include scrolling containers to the outermost scrollable container (document.body), the scrollable capacity needs to meet\n           *      1. The parent of the scroll container (directly or indirectly)\n           *      2. There is a scroll axis (clientHeight < scrollHeight | | clientWidth < scrollWidth)\n           *      3.overflowX or overflowY has a value and is not visible or clip\n           *       For details, please see https://github.com/stipsan/compute-scroll-into-view\n           *\n           * behavior定义滚动行为\n           *  - 可选 'auto' | 'smooth' | Function\n           *  - Function 自定义滚动行为\n           *    - 入参为 actions，每个action包含一个应该滚动的元素\n           *    - actions包括滚动容器到最外层的可滚动容器（document.body），可滚动容需满足\n           *      1. 滚动容器的父级（直接或间接）\n           *      2. 有滚动轴（clientHeight < scrollHeight || clientWidth < scrollWidth）\n           *      3. overflowX 或 overflowY 有值且不为 visible 或 clip\n           *      详情请看https://github.com/stipsan/compute-scroll-into-view\n           */\n          behavior: actions => {\n            // We just need to scroll the innermost target container\n            const innermostAction = _get(actions, '0');\n\n            const el = _get(innermostAction, 'el');\n\n            const top = _get(innermostAction, 'top');\n\n            if (el) {\n              const offsetTop = top - targetOffset;\n\n              if (el.scroll && canSmoothScroll) {\n                el.scroll({\n                  top: offsetTop,\n                  behavior\n                });\n              } else {\n                el.scrollTop = offsetTop;\n              }\n            }\n          },\n          block: 'start'\n        };\n\n        if (destNode) {\n          scrollIntoView(destNode, scrollOpts);\n        }\n      }\n    };\n\n    this._setActiveSlide = () => {\n      const activeClass = `.${cssClasses.PREFIX}-link-title-active`;\n\n      const linkNode = this._adapter.getAnchorNode(activeClass);\n\n      if (linkNode) {\n        const height = linkNode.offsetTop;\n\n        this._adapter.setSlideBarTop(height);\n      }\n    };\n  }\n\n}"],
  "mappings": "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",
  "names": ["_isArray", "_get"]
}
