{
  "version": 3,
  "sources": ["../../../../node_modules/.pnpm/@douyinfe+semi-foundation@2.34.0/node_modules/@douyinfe/semi-foundation/lib/es/datePicker/yearAndMonthFoundation.js"],
  "sourcesContent": ["import _cloneDeep from \"lodash/cloneDeep\";\nimport { setMonth, setYear } from 'date-fns';\nimport BaseFoundation from '../base/foundation';\nimport { strings } from './constants';\nexport default class YearAndMonthFoundation extends BaseFoundation {\n  constructor(adapter) {\n    super(Object.assign({}, adapter));\n  } // eslint-disable-next-line @typescript-eslint/no-empty-function\n\n\n  init() {} // eslint-disable-next-line @typescript-eslint/no-empty-function\n\n\n  destroy() {}\n\n  selectYear(item, panelType) {\n    // const year = item.value;\n    const {\n      currentYear,\n      currentMonth\n    } = this.getStates();\n    const {\n      type\n    } = this.getProps();\n    const left = strings.PANEL_TYPE_LEFT;\n    const right = strings.PANEL_TYPE_RIGHT;\n\n    const year = _cloneDeep(currentYear);\n\n    year[panelType] = item.value; // make sure the right panel time is always less than the left panel time\n\n    if (type === 'monthRange') {\n      const isSameYearIllegalDate = year[left] === year[right] && currentMonth[left] > currentMonth[right];\n\n      if (panelType === left && item.value > year[right] || panelType === left && isSameYearIllegalDate) {\n        // 1. select left year and left year > right year\n        // 2. select left year, left year = right year, but left date > right date\n        year[right] = item.value + 1;\n      } else if (panelType === right && isSameYearIllegalDate) {\n        // 1. select right year, left year = right year, but left date > right date\n        year[left] = item.value - 1;\n      }\n    }\n\n    this._adapter.setCurrentYear(year, () => this.autoSelectMonth(item, panelType, year));\n\n    this._adapter.notifySelectYear(year);\n  }\n\n  selectMonth(item, panelType) {\n    const {\n      currentMonth,\n      currentYear\n    } = this.getStates();\n    const {\n      type\n    } = this.getProps();\n    const left = strings.PANEL_TYPE_LEFT;\n    const right = strings.PANEL_TYPE_RIGHT;\n\n    const month = _cloneDeep(currentMonth);\n\n    month[panelType] = item.month; // make sure the right panel time is always less than the left panel time\n\n    if (type === 'monthRange' && panelType === left && currentYear[left] === currentYear[right] && item.value > month[right]) {\n      month[right] = item.month + 1;\n    }\n\n    this._adapter.setCurrentMonth(month);\n\n    this._adapter.notifySelectMonth(month);\n  }\n  /**\n   * After selecting a year, if the currentMonth is disabled, automatically select a non-disabled month\n   */\n\n\n  autoSelectMonth(item, panelType, year) {\n    const {\n      disabledDate,\n      locale\n    } = this._adapter.getProps();\n\n    const {\n      months,\n      currentMonth\n    } = this._adapter.getStates();\n\n    const currentDate = setYear(Date.now(), item.year);\n    const isCurrentMonthDisabled = disabledDate(setMonth(currentDate, currentMonth[panelType] - 1));\n\n    if (isCurrentMonthDisabled) {\n      const currentIndex = months.findIndex(_ref => {\n        let {\n          month\n        } = _ref;\n        return month === currentMonth[panelType];\n      });\n      let validMonth; // First look in the back, if you can't find it in the back, then look in the front\n\n      validMonth = months.slice(currentIndex).find(_ref2 => {\n        let {\n          month\n        } = _ref2;\n        return !disabledDate(setMonth(currentDate, month - 1));\n      });\n\n      if (!validMonth) {\n        validMonth = months.slice(0, currentIndex).find(_ref3 => {\n          let {\n            month\n          } = _ref3;\n          return !disabledDate(setMonth(currentDate, month - 1));\n        });\n      }\n\n      if (validMonth) {\n        const month = _cloneDeep(currentMonth);\n\n        month[panelType] = validMonth.month; // change year and month same time\n\n        this._adapter.setCurrentYearAndMonth(year, month);\n\n        this._adapter.notifySelectYearAndMonth(year, month);\n      }\n    }\n  }\n\n  backToMain() {\n    this._adapter.notifyBackToMain();\n  }\n\n}"],
  "mappings": "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",
  "names": ["_cloneDeep"]
}
